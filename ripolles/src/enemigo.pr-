Process enemigo(jugador,tipo,x,y,x_trigger,flags);
Private
	objetivo;
	e; //id enemigo
	o; //id objetivo
	piensa;
	huye=1;
	se_defiende=0;
	sabe_saltar=0;
	sabe_ataque_especial=0;
	max_vida;
	controlado;
Begin
	resolution=global_resolution;
	from i=0 to 7; p[jugador].botones[i]=0;	end
	e=personaje(jugador,tipo);
	e.x=x;
	e.y_base=y;
	e.flags=flags;
	max_vida=p[jugador].vida;
	while(!exists(id_camara)) frame; end
	from alpha=0 to 255 step 25; frame; end
	
	loop
		if(personaje_mas_avanzado()!=0)
			if(p[personaje_mas_avanzado()].identificador.x>x_trigger)
				break;
			end
		end
		if(e.herida!=0) break; end
		if(e.x_inc!=0 or e.y_inc!=0) break; end
		if(modo_juego!=modo_historia) break; end
		frame; 
	end
	
	if(tipo==5) from alpha=0 to 255 step 4; frame; end end
	if(tipo==2 or tipo==5) se_defiende=1; huye=0; end
	if(tipo==4 or tipo==5) sabe_saltar=1; end
	if(tipo==6 or tipo==102) sabe_ataque_especial=1; end
	loop
		if(mata_enemigos and tipo>0)
			p[jugador].vida=0;
		end

		x=e.x;
		y=e.y;
		accion=e.accion;
		from i=0 to 7; p[jugador].botones[i]=0;	end

		//recolocamos al enemigo si está muy alejado
		if(x<id_camara.x-((ancho_pantalla/2)+150))
			x=e.x=id_camara.x-((ancho_pantalla/2)+150);
		elseif(x>id_camara.x+((ancho_pantalla/2)+150))
			x=e.x=id_camara.x+((ancho_pantalla/2)+150);
		end
		
		objetivo=jugador_mas_cercano();
		
		if(renacimiento)
			e.herida=20;
		end
				
		if(good_vs_evil)
			if(estoy_en_pantalla())
				if(controlado==0)
					from i=3 to 4;
						if(!exists(p[i].identificador) and controlado==0)
							p[i].identificador=id;
							controlador(i);
							controlado=i;
						end
					end
				else
					objetivo=0;
					from j=0 to 7; p[jugador].botones[j]=p[controlado].botones[j]; end
				end
			else
				if(controlado>0)
					p[controlado].identificador=0;
				end
				controlado=0;
			end
		end

		if(objetivo>0)
			if(p[objetivo].juega)
				o=p[objetivo].identificador;
				if(e.accion==quieto or e.accion==camina or e.accion==defiende) //si el enemigo puede actuar
					if(o.herida==0) //si el prota está herido, el enemigo se queda quieto
						if(sabe_saltar and rand(1,100)) //podemos saltar, igual saltamos
							p[jugador].botones[b_2]=1;
						end
						if(o.accion==ataca_aire and se_defiende) //si el prota está atacando en el aire, nos intentaremos proteger
							p[jugador].botones[b_3]=1;
						else //si no nos protegemos
							//si podemos hacer el ataque especial, random!
							if(sabe_ataque_especial and rand(0,200)==0) //ataque especial
								p[jugador].botones[b_1]=1; //ataque
								p[jugador].botones[b_3]=1; //defensa
							end
						
							if(distancia_jugador(objetivo)>60 or !en_rango(o.z,e.z,20)) //si no lo tenemos lo suficientemente cerca como para atacar
								if(distancia_jugador(objetivo)>150) //si está bastante lejos vamos a por él
									if(lado_jugador(objetivo)) //prota a la izquierda
										p[jugador].botones[b_izquierda]=1;
									else
										p[jugador].botones[b_derecha]=1;
									end
								else //si está bastante cerca, puede que no queramos ir directamente hacia él
									if(o.x_inc!=0 and huye==1) //prota en movimiento
										//IA patrocinada por los fantasmas del Super Mario World
										//si vienen a por nosotros, huímos, sino, atacamos
										if(lado_jugador(objetivo)) //prota a la izquierda
											if(o.flags==1) //se aleja, a por él!
												p[jugador].botones[b_izquierda]=1;
											else //viene a por nosotros, HUYAMOS!!
												p[jugador].botones[b_derecha]=1;
											end
										else //a la derecha
											if(o.flags==0) //se aleja, vamos a por él!
												p[jugador].botones[b_derecha]=1;
											else //viene a por nosotros, HUYAMOS!!
												p[jugador].botones[b_izquierda]=1;
											end							
										end
									else //objetivo quieto
										if(lado_jugador(objetivo)) //a la izquierda
											p[jugador].botones[b_izquierda]=1;
											if(sabe_saltar and rand(1,100))
												p[jugador].botones[b_2]=1;
											end
										else //a la derecha
											p[jugador].botones[b_derecha]=1;
											if(sabe_saltar and rand(1,100))
												p[jugador].botones[b_2]=1;
											end
										end
									end
								end
								//si no está en rango y estamos relativamente cerca, nos acercamos
								if(!en_rango(o.z,e.z,20) and distancia_jugador(objetivo)<100)
									if(e.z<o.z)
										p[jugador].botones[b_arriba]=1;
									else
										p[jugador].botones[b_abajo]=1;
									end
								end
								
							else //tenemos al objetivo lo suficientemente cerca como para atacar
								if(rand(1,30)==1)
									p[jugador].botones[b_1]=1; //ataque
								end
							end
						end
					end
				end
				if(e.accion==quieto or e.accion==camina) //siempre intentaremos que el enemigo mire hacia el jugador
					e.flags=lado_jugador(objetivo);
				end
			end
		end
				
		if(e.herida>0 and jugador!=100)
			muestra_vida((p[jugador].vida*100)/max_vida);
		end
		if(e.accion==muere)
			if(controlado>0)
				p[controlado].identificador=0;
			end
			return;
		end
		frame;
	end	
End

Process muestra_vida(size_x);
Begin
	resolution=global_resolution;
	ctype=c_scroll;
	x=father.x;
	y=father.y-60;
	z=-500;
	file=fpg_general;
	graph=52;
	size_y=150;
	muestra_vida2();
	frame;
End

Process muestra_vida2();
Begin
	resolution=global_resolution;
	ctype=c_scroll;
	x=father.x;
	y=father.y;
	file=fpg_general;
	graph=51;
	z=father.z+1;
	frame;
End