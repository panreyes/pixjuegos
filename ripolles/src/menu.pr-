Global
	menu_torcio=0;
	x_base_menu;
	y_base_menu;
End

process menu(num_menu);
private
	y_objetivo;
	opcion_actual=1;
	num_opciones;
	pulsando;
	volver_a_menu;
	distancia_opciones=43;
	contador_sonido=0;
	
	//opciones que pueden cambiar de sitio
	//menu principal:
	opcion_salir=-1;
	opcion_trucos=-1;
	
	opcion_truco_pato;
	opcion_truco_fuego_amigo;
	opcion_truco_hamburguesas;
	opcion_truco_good_vs_evil;
	
	id_txt;
begin
	resolution=global_resolution;
	if(fpg_menu<1)
		fpg_menu=load_fpg("fpg/menu.fpg");
	end
	file=fpg_menu;
	mata_textos_menu=1;
	
	if(num_menu==-1)
		//delete_text(all_text);
		set_fps(30,0);	
		if(ops.trucos==0)
			if(ops.truco_hamburguesas=>0 or ops.truco_fuego_amigo=>0 or ops.truco_pato=>0 or ops.truco_good_vs_evil=>0)
				ops.trucos=1;
			end
		end
		jukeboxing=0;
		let_me_alone();
		reinicio_variables();
		start_scroll(0,fpg_fondo_menu,3,4,0,15);
		controlador(0);
		pon_musica(14);
		num_menu=0;
		logo(2);
		scroll[0].camera=mueve_fondo();
	end
	
	guarda_opciones();
	
	fade_on();
	
	if(arcade_mode and num_menu==0)
		while(p[0].botones[b_salir]) frame; end
		write(fpg_texto,320,180,4,textos[14]);
		while(p[0].botones[b_aceptar]) frame; end
		while(!p[0].botones[b_aceptar])
			if(p[0].botones[b_salir]) exit(); end
			frame; 
		end
		while(p[0].botones[b_aceptar]) frame; end
		
		//delete_text(all_text);
		file=fpg_lang;
		graph=221;
		x=320;
		y=180;
		z=-100;
		from alpha=0 to 255 step 20; frame; end
		while(p[0].botones[b_aceptar]) frame; end
		while(!p[0].botones[b_aceptar])
			if(p[0].botones[b_salir]) exit(); end
			frame; 
		end
		while(p[0].botones[b_aceptar]) frame; end
		from alpha=255 to 0 step -20; frame; end
		num_menu=1;
	end
	
	file=fpg_menu;
	//lapiz superchulo
	z=-20;
	graph=50;
	
	if(exists(type jugar))
		x_base_menu=150;
		y_base_menu=100;	
	else
		x_base_menu=60;
		y_base_menu=20;
	end
	
	x=x_base_menu;
	y=y_base_menu;
	alpha=255;

	frame(200);
	mata_textos_menu=0;
	
	//ponemos el menú actual
	switch(num_menu)
		case 0: //general
			//menu_torcio=5000;
			titulo();
			from i=15 to 18;
				texto_menu(y+=distancia_opciones,textos[i]);
			end
			num_opciones=5;
			if(ops.trucos)
				texto_menu(y+=distancia_opciones,textos[66]);
				num_opciones++;
			end
			texto_menu(y+=distancia_opciones,textos[19]);
			volver_a_menu=0;
		end
		case 1: //jugar
			//menu_torcio=-5000;
			num_opciones=1;
			texto_menu(y+=distancia_opciones,"1"+textos[20]);
			if(posibles_jugadores>1) texto_menu(y+=distancia_opciones,"2"+textos[21]); num_opciones++; end
			if(posibles_jugadores>2) texto_menu(y+=distancia_opciones,"3"+textos[21]); num_opciones++; end
			if(posibles_jugadores>3) texto_menu(y+=distancia_opciones,"4"+textos[21]); num_opciones++; end
			volver_a_menu=0;
		end
		case 2: //opciones	
			menu_torcio=0;
			if(os_id!=1003)
				texto_menu(y+=distancia_opciones,textos[22]);
				estado_opcion(y,1);
				num_opciones=3;
			else
				num_opciones=2;
			end
			texto_menu(y+=distancia_opciones,textos[23]); estado_opcion(y,2);
			texto_menu(y+=distancia_opciones,textos[24]); estado_opcion(y,3);
			if(exists(type jugar))
				volver_a_menu=-2;
			else
				volver_a_menu=0;
			end
		end
		case 3: //modos de juego
			//menu_torcio=-5000;
			num_opciones=2;
			
			modo_matajefes=-1;
			modo_battleroyale=-1;

			texto_menu(y+=distancia_opciones,textos[28]);
			texto_menu(y+=distancia_opciones,textos[29]);
			if(ops.matajefes)
				modo_matajefes=++num_opciones;
				texto_menu(y+=distancia_opciones,textos[30]);
			end
			if(jugadores>1)
				modo_battleroyale=++num_opciones;
				texto_menu(y+=distancia_opciones,textos[31]);
			end
			volver_a_menu=0;
		end
		case 4: //trucos!
			menu_torcio=0;
			if(ops.truco_pato=>0) texto_menu(y+=distancia_opciones,textos[25]); estado_opcion(y,4); num_opciones++; end
			if(ops.truco_fuego_amigo=>0) texto_menu(y+=distancia_opciones,textos[26]); estado_opcion(y,5); num_opciones++; end
			if(ops.truco_hamburguesas=>0) texto_menu(y+=distancia_opciones,textos[27]); estado_opcion(y,6); num_opciones++; end

			volver_a_menu=0;
			
			id_txt=write_size(fpg_texto_rojo,ancho_pantalla/2,alto_pantalla-40,4,textos[67],60);
		end
		case -2: //menu de pausa
			texto_menu(y+=distancia_opciones,"Continuar");
			texto_menu(y+=distancia_opciones,"Opciones");
			texto_menu(y+=distancia_opciones,"Salir");
			num_opciones=3;
			volver_a_menu=-2;
			ready=0;
		end
	end
	
	x=x-20;
	y=800;
	
	loop
		jukebox();
		if(opcion_actual>num_opciones) opcion_actual=1;	end
		if(opcion_actual<1)	opcion_actual=num_opciones;	end

		y_objetivo=y_base_menu+(opcion_actual*distancia_opciones);
		if(y!=y_objetivo) 
			y+=(y_objetivo-y)/2;
			angle=menu_torcio+fget_angle(x,y,x+30,y_objetivo);
		else
			angle=menu_torcio;
		end

		if(p[0].botones[b_aceptar] or key(_enter))
			if(ops.sonido==1)
				sonido(13,0);
			end
			while(p[0].botones[b_aceptar] or key(_enter)) frame; end
			if(num_menu==0 and opcion_actual==1 and posibles_jugadores==1) //si solo hay un posible jugador, no se elige el número de jugadores
				jugadores=1;
				p[1].juega=1;
				num_menu=1;
			end
			switch(num_menu)
				case 0: //general
					if(ops.trucos)
						opcion_trucos=5;
						opcion_salir=6;
					else
						opcion_salir=5;
					end
					//delete_text(all_text);
					switch(opcion_actual)
						case 1: menu(1); end
						case 2: menu(2); end
						case 3: muestra_hasta_volver(1); end
						case 4: muestra_hasta_volver(10); end
						case opcion_trucos: menu(4); end
						case opcion_salir: salir(); end
					end
					return;
				end
				case 1: //jugar
					jugadores=opcion_actual;
					from i=1 to 4; p[i].juega=0; end //reset de valores
					from i=1 to opcion_actual; p[i].juega=1; end //seteamos los jugadores que juegan
					menu(3);
					return;
				end
				case 2: //opciones
					if(os_id==1003) opcion_actual++; end
					switch(opcion_actual)
						case 1:
							if(os_id==os_win32 or os_id==os_linux)
								if(ops.ventana) 
									ops.ventana=0; 
									full_screen=1;
								else 
									ops.ventana=1; 
									full_screen=0;
								end
								set_mode(ancho_pantalla*abs(global_resolution),alto_pantalla*abs(global_resolution),bpp);
							end
						end
						case 2: 
							if(ops.sonido) ops.sonido=0; else ops.sonido=1; end 
							if(contador_sonido==10) 
								sonido(22,0); 
								ops.matajefes=1;
								ops.truco_pato=0;
								ops.truco_hamburguesas=0;
								ops.truco_fuego_amigo=0;
								guarda_opciones();
							else
								contador_sonido++;
							end

							sonido(13,0);
						end
						case 3:
							if(ops.musica) stop_song(); ops.musica=0; else ops.musica=1; end 
							if(!exists(type jugar))
								pon_musica(14);
							else
								pon_musica(anterior_cancion);
							end
						end
						case 4:
							//condiciones de caca. entregamos mañana, es aceptable xD
							if(ops.truco_pato=>0)
								if(ops.truco_pato) ops.truco_pato=0; else ops.truco_pato=1; end
							elseif(ops.truco_pato<0 and ops.truco_fuego_amigo=>0)
								if(ops.truco_fuego_amigo) ops.truco_fuego_amigo=0; else ops.truco_fuego_amigo=1; end
							elseif(ops.truco_pato<0 and ops.truco_fuego_amigo<0 and ops.truco_hamburguesas=>0)
								if(ops.truco_hamburguesas) ops.truco_hamburguesas=0; else ops.truco_hamburguesas=1; end
							end
						end
						case 5:
							if(ops.truco_pato=>0 and ops.truco_fuego_amigo=>0)
								if(ops.truco_fuego_amigo) ops.truco_fuego_amigo=0; else ops.truco_fuego_amigo=1; end
							elseif((ops.truco_pato=>0 and ops.truco_fuego_amigo<0 and ops.truco_hamburguesas=>0)
							  or (ops.truco_pato<0 and ops.truco_fuego_amigo=>0 and ops.truco_hamburguesas=>0))
								if(ops.truco_hamburguesas) ops.truco_hamburguesas=0; else ops.truco_hamburguesas=1; end
							end
						end
						case 6:
							if(ops.truco_hamburguesas) ops.truco_hamburguesas=0; else ops.truco_hamburguesas=1; end
						end
					end
					if(os_id==1003) opcion_actual--; end
				end
				case 3: //modo de juego
					modo_juego=opcion_actual;
					fade_off();
					while(fading) frame; end
					//delete_text(all_text);
					if(modo_juego==modo_historia)
						cutscene_principio();
					else
						jugar();
					end
					return;
				end
				case 4: //trucos
					switch(opcion_actual)
						case 1:
							//condiciones de caca. entregamos mañana, es aceptable xD
							if(ops.truco_pato=>0)
								if(ops.truco_pato) ops.truco_pato=0; else ops.truco_pato=1; end
							elseif(ops.truco_pato<0 and ops.truco_fuego_amigo=>0)
								if(ops.truco_fuego_amigo) ops.truco_fuego_amigo=0; else ops.truco_fuego_amigo=1; end
							elseif(ops.truco_pato<0 and ops.truco_fuego_amigo<0 and ops.truco_hamburguesas=>0)
								if(ops.truco_hamburguesas) ops.truco_hamburguesas=0; else ops.truco_hamburguesas=1; end
							end
						end
						case 2:
							if(ops.truco_pato=>0 and ops.truco_fuego_amigo=>0)
								if(ops.truco_fuego_amigo) ops.truco_fuego_amigo=0; else ops.truco_fuego_amigo=1; end
							elseif((ops.truco_pato=>0 and ops.truco_fuego_amigo<0 and ops.truco_hamburguesas=>0)
							  or (ops.truco_pato<0 and ops.truco_fuego_amigo=>0 and ops.truco_hamburguesas=>0))
								if(ops.truco_hamburguesas) ops.truco_hamburguesas=0; else ops.truco_hamburguesas=1; end
							end
						end
						case 3:
							if(ops.truco_hamburguesas) ops.truco_hamburguesas=0; else ops.truco_hamburguesas=1; end
						end
					end
				end
				case -2: //menú de pausa
					switch(opcion_actual)
						case 1:
							mata_textos_menu=1;
						end
						case 2:
							menu(2);
						end
						case 3:
							fade_off();
							while(fading); frame; end
							menu(-1);
						end
					end
					return;
				end
			end
		end
		if((p[0].botones[b_cancelar] or key(_esc)) and volver_a_menu!=num_menu)
			//delete_text(all_text);
			if(ops.sonido==1)
				sonido(11,0);
			end
			while(p[0].botones[b_cancelar] or key(_esc)) frame; end
			if(id_txt!=0) id_txt.accion=-1; end
			menu(volver_a_menu);
			return;
		end
		if(p[0].botones[3])
			if(!pulsando)
				opcion_actual++;
				if(ops.sonido==1)
					sonido(12,0);
				end
				pulsando=1;
			end
		elseif(p[0].botones[2])
			if(!pulsando)
				opcion_actual--;
				if(ops.sonido==1)
					sonido(12,0);
				end
				pulsando=1;
			end
		else
			pulsando=0;
		end
		frame;
	end
end

process logo(graph);
begin
	resolution=global_resolution;
	file=fpg_menu;
	x=600;
	y=132;
	z=-10;
	loop
		if(x>ancho_pantalla-260)
			x+=(x-(ancho_pantalla-260))/-10;
		else
			x=ancho_pantalla-260;
		end
		frame;
	end
end
 
Process titulo();
Begin
	resolution=global_resolution;
	if(panoramico)
		x=ancho_pantalla-240;
	else
		x=ancho_pantalla-180;
	end
	y=324;
	z=-100;
	file=fpg_lang;
	graph=1;
	from alpha=0 to 255 step 40; y-=4; frame; end
	while(exists(father))
		frame;
	end
	from alpha=255 to 0 step -40; y-=4; frame; end
End

process muestra_hasta_volver(tipo);
begin
	mata_textos_menu=1;
	resolution=global_resolution;
	x=ancho_pantalla/2;
	//y=alto_pantalla/2;
	y=alto_pantalla;
	z=-512;
	file=fpg_lang;
	i=1;
	if(!panoramico) size=75; end
	alpha=0;
	while(i==1)
		graph=pinta_ayuda(tipo);
		tipo++;
		while(!p[0].botones[b_cancelar] and !p[0].botones[b_aceptar] and !p[0].botones[6] and !key(_enter) and !key(_esc))
			if(alpha<255) alpha+=20; end
			y+=(((alto_pantalla/2)-y)/7);
			if(y<(alto_pantalla/2)+15 and y>alto_pantalla/2) y--; end
			frame; 
		end
		if(p[0].botones[b_cancelar] or key(_esc) or tipo==4 or tipo==11)
			sonido(11,0); 
			i=0;
		else
			sonido(12,0);
			sal_de_aqui(graph);
			alpha=0;
			y=alto_pantalla;
		end
		while(p[0].botones[b_cancelar] or p[0].botones[b_aceptar] or p[0].botones[6] or key(_enter) or key(_esc)) 
			frame; 
		end
		frame;
	end
	sal_de_aqui(graph);
	menu(0);
end

Process sal_de_aqui(graph);
Begin
	resolution=global_resolution;
	y=father.y;
	z=father.z+1;
	x=ancho_pantalla/2;
	file=fpg_lang;
	while(x>-500)
		y+=(((alto_pantalla/2)-y)/7);
		if(y<(alto_pantalla/2)+15 and y>alto_pantalla/2) y--; end
		angle-=gravedad*500;
		x+=gravedad*10;
		gravedad--;
		frame;
	end
	unload_map(0,graph);
End

process mueve_fondo();
Begin
	resolution=global_resolution;
	loop
		x-=3;
		y-=3;
		frame;
	end
End

//1: pantalla completa, 2:sonido, 3: musica, 4:panoramico, 4:pato, 5:fuego amigo, 6:sin bandos
Process estado_opcion(y,tipo);
Begin
	resolution=global_resolution;
	file=fpg_general;
	if(panoramico)
		x=500;
	else
		x=400;
	end
	z=-512;
	switch(tipo) //con lo fácil que hubiera sido utilizar punteros...
		case 1: graph=41+ops.ventana; end
		case 2: graph=42-ops.sonido; end
		case 3: graph=42-ops.musica; end
		case 4: graph=42-ops.truco_pato; end
		case 5: graph=42-ops.truco_fuego_amigo; end
		case 6: graph=42-ops.truco_hamburguesas; end
	end

	from alpha=0 to 255 step 30; x-=2; frame; end
	while(exists(father))
		switch(tipo) //con lo fácil que hubiera sido utilizar punteros...
			case 1: graph=41+ops.ventana; end
			case 2: graph=42-ops.sonido; end
			case 3: graph=42-ops.musica; end
			case 4: graph=42-ops.truco_pato; end
			case 5: graph=42-ops.truco_fuego_amigo; end
			case 6: graph=42-ops.truco_hamburguesas; end
		end
		frame;
	end
	from alpha=255 to 0 step -30; x-=2; frame; end
End

Process texto_menu(y,string mitexto);
Begin
	if(global_resolution!=0) resolution=global_resolution; end
	x=800;
	z=-512;
	graph=write_in_map(fpg_texto,mitexto,3);
	angle=-50000;
	size=80;
	while(mata_textos_menu==0)
		x+=((x_base_menu-x)/5);
		//angle+=((0-angle)/5);
		angle+=((menu_torcio-angle)/5);
		frame;
	end
	while(x>-390)
		x+=((-400-x)/5);
		angle+=((50000-angle)/5);
		frame;
	end
OnExit
	unload_map(0,graph);
End