/*F1:
 nombre del nivel
 descripcion del nivel
F2: importar paquete de tiles
F3: importar musica
F4: importar fondo
F5: nuevo nivel
F6: guardar nivel
F7: anterior nivel
F8: siguiente nivel
F9: nuevo paquete niveles
F10: guardar paquete niveles
F11: exportar paquete niveles al escritorio
F12: salir

flechas: moverse en el tileado

espacio cambia entre: escenario, enemigos, powerups
números del 1 al 9 cambian entre tipo de objetos
número 0 es un bloque vacío*/

Global
	id_editor;
End

Function string navegador(string texto,string formatos);
Private
	tec;
	tec2;
	tecenter;
	string formato[5];
	string ficheracos[20];
	id_txt_titulo;
	id_txt_ficheracos[20];
	num_ficheros;
	string temp;
	j;
Begin
 	while(i=<len(formatos))
		if(formatos[i++]==",")
			j++; 
		else
			formato[j]+=formatos[i-1];
		end
		say(formato[j]);
	end
	i=0; j=0;
	while(formato[j]!="")
		while((temp=glob(savegamedir+'..\..\..\Escritorio\*.'+formato[j]))!="");
			if(!fileinfo.directory) ficheracos[i++]=temp; num_ficheros++; end
			say(temp);
		end

		j++;
	end
	id_txt_titulo=write(fuente_peq,400,10,1,texto);
  if(num_ficheros!=0)
	x=100;
	y=125;
	from i=0 to num_ficheros; id_txt_ficheracos[i]=write(fuente_peq,x,y,3,ficheracos[i]); y+=60; end
	file=fpg_menu;
	elecc=0;
	controlador(1);
	machango();
	from i=0 to 20; elep(); end
	tecenter=1;
	loop
		if(botones.p[1][4])
			if(tecenter==0)
				sonido(3);
				while(exists(type elep)) signal(type elep, s_kill); end
				signal(type machango, s_kill);
				signal(type controlador, s_kill);
				from i=0 to num_ficheros; delete_text(id_txt_ficheracos[i]); end
				delete_text(id_txt_titulo);
				return savegamedir+'..\..\..\Escritorio\'+ficheracos[elecc];
			end
			tecenter=1;
		else
			tecenter=0;
		end //enter
	
		if(botones.p[1][3])
			if(tec==0)
				if(ops.sonido==1)
					sonido(2);
				end
				elecc++;
				tec=1;
			end
		else
			tec=0;
		end
		if(botones.p[1][2])
			if(tec2==0)
				if(ops.sonido==1)
					sonido(2);
				end
				elecc--;
				tec2=1;
			end
		else
			tec2=0;
		end
		if(elecc==num_ficheros)
			elecc=0;
		end
		if(elecc==-1)
			elecc=num_ficheros-1;
		end
		frame;
	end
end
	
	
End

Function importar_fondo(string rutafondo);
Begin
End

Function importar_tiles(string rutatiles);
Begin
	if(fpg_tiles=load_fpg(rutatiles))
		save_fpg(fpg_tiles,savegamedir+"niveles\"+paqueteniveles+"\tiles.fpg");
	end
End

Function preparar_cancion(string rutacancion);
Private
	string argumentos;
	string formatocancion;
	id_txt;
Begin
	formatocancion+=rutacancion[len(rutacancion)-3];
	formatocancion+=rutacancion[len(rutacancion)-2];
	formatocancion+=rutacancion[len(rutacancion)-1];
	formatocancion=ucase(formatocancion);

	chdir(dir_juego+"\bin");
	id_txt=write(fuente,400,300,4,"Preparando cancion");
	frame;
	if(formatocancion=="OGG")
		//SI NOS MANDA UN OGG:
		argumentos='"'+rutacancion+'" -m -w "'+getenv("TEMP")+'\temp.wav"';
		exec(_P_WAIT,"oggdec",1,&argumentos);
	elseif(formatocancion=="MP3")
		//SI NOS MANDA UN MP3:
		argumentos='-m --output=wave:"'+getenv("TEMP")+'\temp.wav" "'+rutacancion+'"';
		exec(_P_WAIT,"mp3dec",1,&argumentos);
	else 
		RETURN -1;
	end
	//Y EL WAV LO CONVERTIMOS A UN OGG WENO:
	argumentos='"'+getenv("TEMP")+'\temp.wav" -M64 --resample 44100 -o "'+savegamedir+'niveles\'+paqueteniveles+'\nivel'+num_nivel+'.ogg"';
	exec(_P_WAIT,"oggenc",1,&argumentos);
	delete_text(id_txt);
	play_song(load_song(savegamedir+"niveles\"+paqueteniveles+"\nivel"+num_nivel+".ogg"),0);
	frame(300);
	rm(getenv("TEMP")+'\temp.wav');
	chdir(dir_juego);
End

Function exportar_paquete_niveles();
Private
	string argumentos;
Begin
	chdir(dir_juego+"\bin");
	//argumentos='-r "'+savegamedir+paqueteniveles+'.pdn" "'+savegamedir+'niveles\'+paqueteniveles+'"';
	//PAL ESCRITORIO windows nt:
	argumentos='-r "'+savegamedir+'..\..\..\Escritorio\'+paqueteniveles+'.pdn" "'+savegamedir+'niveles\'+paqueteniveles+'"';
	say(argumentos);
	exec(_P_WAIT,"zip",1,&argumentos);
	chdir(dir_juego);
End

Function string input(string texto);
Private
	string texto_input;
	char prompt="_";
	id_txt_input;
	id_txt_input2;
Begin	
	id_txt_input2=write(0,400,300,4,texto);
	Loop
	    If(scan_code==_backspace) scan_code=0; texto_input=substr(texto_input, 0, -1); End
	    If(scan_code==_enter and texto_input!="") while(key(_enter)) frame; end break; End
		if(ascii>=65 and ascii<=90) ascii+=32; end
	    If(ascii>=97 and ascii<=122)
	        texto_input+=chr(ascii) ;
			scan_code=0;
	    End
	    if(i<20)
		    id_txt_input=write(0, x, y, 0, texto_input + prompt); 
	    else
		    id_txt_input=write(0, x, y, 0, texto_input); 
	    end
	    Frame;
	    delete_text(id_txt_input);
	End
	delete_text(id_txt_input2);
	return texto_input;
End 

Function inputnum(string texto);
Private
	string texto_input;
	char prompt="_";
	id_txt_input;
	id_txt_input2;
Begin	
	id_txt_input2=write(0,400,300,4,texto);
	Loop
	    If(scan_code==_backspace) scan_code=0; texto_input=substr(texto_input, 0, -1); End
	    If(scan_code==_enter and texto_input!="") while(key(_enter)) frame; end break; End  
	    If(ascii>=48 and ascii<=57)
	        texto_input+=chr(ascii) ;
			scan_code=0;
	    End
	    if(i<20)
		    id_txt_input=write(0, x, y, 0, texto_input + prompt); 
	    else
		    id_txt_input=write(0, x, y, 0, texto_input); 
	    end
	    Frame;
	    delete_text(id_txt_input);
	End
	delete_text(id_txt_input2);
	return atoi(texto_input);
End

Process editor_de_niveles();
Private
	//paqueteniveles es global
	//num_nivel es global
	struct niveles[50];
		string nombre;
		string descripcion;
		int mapa;
		int fondo;
	end
	num_niveles;
	tipo_bloque;
	ancho_mapa;
	alto_mapa;
	mapa_scroll;
	ancho_scroll;
	alto_scroll;
	j;
Begin
	let_me_alone();
	id_editor=id;
	write(0,0,y+=10,0,"F1. Cambiar nombre y descripcion");
	write(0,0,y+=10,0,"F2: importar paquete de tiles");
	write(0,0,y+=10,0,"F3: importar musica");
	write(0,0,y+=10,0,"F4: importar fondo");
	write(0,0,y+=10,0,"F5: nuevo nivel");
	write(0,0,y+=10,0,"F6: guardar nivel");
	write(0,0,y+=10,0,"F7: anterior nivel");
	write(0,0,y+=10,0,"F8: siguiente nivel");
	write(0,0,y+=10,0,"F9: nuevo paquete niveles");
	write(0,0,y+=10,0,"F10: guardar paquete niveles");
	write(0,0,y+=10,0,"F11: exportar paquete niveles al escritorio");
	write(0,0,y+=10,0,"F12: salir");

	num_nivel=1;
	paqueteniveles=input("Escribe el nombre del paquete de niveles");
	i=0;
	if(chdir(savegamedir+"niveles\"+paqueteniveles)==0)
		chdir(dir_juego);
		while(file_exists(savegamedir+"niveles\"+paqueteniveles+"\nivel"+itoa(++i)+".png"))
			num_niveles++;
			niveles[i].mapa=load_png(savegamedir+"niveles\"+paqueteniveles+"\nivel"+i+".png");
			if(file_exists(savegamedir+"niveles\"+paqueteniveles+"\fondo"+i+".jpg"))
				niveles[i].fondo=load_image(savegamedir+"niveles\"+paqueteniveles+"\fondo"+i+".jpg");
			end
		end
		pon_nivel_editor(niveles[1].mapa);
	else
		chdir(dir_juego);
		mkdir(savegamedir+"niveles\"+paqueteniveles);
		num_nivel=num_niveles=1;
		niveles[num_nivel].mapa=new_map(inputnum("Ancho del nivel"),inputnum("Longitud del nivel"),32);
		ancho_mapa=graphic_info(0,niveles[num_nivel].mapa,g_width);
		alto_mapa=graphic_info(0,niveles[num_nivel].mapa,g_height);
		j=10; x=0; from i=0 to 9; map_put_pixel(0,niveles[num_nivel].mapa,x++,alto_mapa-3,tiles[i]=j+=5); end
		x=1; from i=1 to 10; map_put_pixel(0,niveles[num_nivel].mapa,x,alto_mapa-2,enemigos[i]=j+=5); end
		x=2; from i=1 to 5; map_put_pixel(0,niveles[num_nivel].mapa,x,alto_mapa-1,powerups[i]=j+=5); end
	end
	x=y=tilesize/4;
	graph=1;
	tipo_bloque=1;
	size=50;
	set_fps(20,0);
	if(fexists(savegamedir+"niveles\"+paqueteniveles+"\nivel"+num_nivel+".ogg")) play_song(load_song(savegamedir+"niveles\"+paqueteniveles+"\nivel"+num_nivel+".ogg"),-1); end
	ancho_mapa=graphic_info(0,niveles[num_nivel].mapa,g_width);
	alto_mapa=graphic_info(0,niveles[num_nivel].mapa,g_height);
	mapa_scroll=new_map(ancho_mapa*tilesize/2,alto_mapa*tilesize/2,8);
	start_scroll(0,0,mapa_scroll,niveles[num_nivel].fondo,0,0);
	scroll.camera=id;
	ctype=c_scroll;
	loop
		//BLOQUES. tipos= 1:nivel, 2:enemigos; 3:powerups
		if(scan_code=>_Q and scan_code<=_P) graph=scan_code-15; end
		if(scan_code=>_A and scan_code<=_L) graph=scan_code-19; end
		if(key(_space)) while(key(_space)) frame; end if(tipo_bloque<3) tipo_bloque++; else tipo_bloque=1; end end
		if(tipo_bloque==1) file=fpg_tiles; if(graph>4) graph=1; end end
		if(tipo_bloque==2) file=fpg_enemigos; if(graph>11) graph=1; end end
		if(tipo_bloque==3) file=fpg_powerups; if(graph>5) graph=1; end end
		if(key(_enter)) 
			switch(tipo_bloque)
				case 1: map_put_pixel(0,niveles[num_nivel].mapa,x/(tilesize/2),y/(tilesize/2),tiles[graph-1]); end
				case 2: map_put_pixel(0,niveles[num_nivel].mapa,x/(tilesize/2),y/(tilesize/2),enemigos[graph]); end
				case 3: map_put_pixel(0,niveles[num_nivel].mapa,x/(tilesize/2),y/(tilesize/2),powerups[graph]); end
			end
			objeto_nivel(file,graph,x,y,size); 
		end
		if(key(_left) and x!=tilesize/4) x-=tilesize/2; end 
		if(key(_right) and x<=(ancho_mapa*tilesize/2)-(tilesize/4)) x+=tilesize/2; end
		if(key(_up) and y!=tilesize/4) y-=tilesize/2; end 
		if(key(_down) and y<=((alto_mapa-3)*tilesize/2)-(tilesize/4)) y+=tilesize/2; end
		
		//FUNCIONES
		if(key(_F1)) 
			while(key(_F1)) frame; end
			niveles[num_nivel].nombre=input("Escribe un nombre para este nivel"); 
			niveles[num_nivel].descripcion=input("Describe brevemente este nivel"); 
		end
		if(key(_F2)) 
			while(key(_F2)) frame; end
			importar_tiles(navegador("Elige un Tileset","fpg"));
		end
		if(key(_F3)) 
			while(key(_F3)) frame; end
			preparar_cancion(navegador("Elige una cancion","ogg,mp3"));
		end
		if(key(_F4)) 
			while(key(_F4)) frame; end
			importar_fondo(navegador("Elige un fondo","jpg,png,bmp"));
		end
		if(key(_F5)) 
			while(key(_F5)) frame; end
			num_niveles++;
			num_nivel=num_niveles;
			niveles[num_nivel].mapa=new_map(inputnum("ancho"),inputnum("largo"),8);
			ancho_mapa=graphic_info(0,niveles[num_nivel].mapa,g_width);
			alto_mapa=graphic_info(0,niveles[num_nivel].mapa,g_height);
			mapa_scroll=new_map(ancho_mapa*tilesize/2,alto_mapa*tilesize/2,8);
			stop_scroll(0);
			start_scroll(0,0,niveles[num_nivel].mapa,niveles[num_nivel].fondo,0,0);
		end
		if(key(_F6)) 
			while(key(_F6)) frame; end
			save_png(0,niveles[num_nivel].mapa,savegamedir+"niveles\"+paqueteniveles+"\nivel"+num_nivel+".png");
		end
		if(key(_F7)) 
			while(key(_F7)) frame; end
			if(num_nivel>1) num_nivel--; end
			if(fexists(savegamedir+"niveles\"+paqueteniveles+"\nivel"+num_nivel+".ogg")) play_song(load_song(savegamedir+"niveles\"+paqueteniveles+"\nivel"+num_nivel+".ogg"),-1); end
			ancho_mapa=graphic_info(0,niveles[num_nivel].mapa,g_width);
			alto_mapa=graphic_info(0,niveles[num_nivel].mapa,g_height);
			mapa_scroll=new_map(ancho_mapa*tilesize/2,alto_mapa*tilesize/2,8);
			stop_scroll(0);
			start_scroll(0,0,niveles[num_nivel].mapa,niveles[num_nivel].fondo,0,0);
			let_me_alone();
			pon_nivel_editor(niveles[i].mapa);			
		end
		if(key(_F8)) 
			while(key(_F8)) frame; end
			if(num_nivel<num_niveles) num_nivel++; end
			if(fexists(savegamedir+"niveles\"+paqueteniveles+"\nivel"+num_nivel+".ogg")) play_song(load_song(savegamedir+"niveles\"+paqueteniveles+"\nivel"+num_nivel+".ogg"),-1); end
			ancho_mapa=graphic_info(0,niveles[num_nivel].mapa,g_width);
			alto_mapa=graphic_info(0,niveles[num_nivel].mapa,g_height);
			mapa_scroll=new_map(ancho_mapa*tilesize/2,alto_mapa*tilesize/2,8);
			stop_scroll(0);
			start_scroll(0,0,niveles[num_nivel].mapa,niveles[num_nivel].fondo,0,0);
			let_me_alone();
			pon_nivel_editor(niveles[i].mapa);
		end
		if(key(_F9)) 
			while(key(_F9)) frame; end
			from i=1 to num_niveles;
				unload_map(0,niveles[i].mapa);
				if(niveles[i].fondo!=0) unload_map(0,niveles[i].fondo); end
			end
			let_me_alone();
			editor_de_niveles();
			return;			
		end
		if(key(_F10)) 
			while(key(_F10)) frame; end
			//ordenar niveles??
		end
		if(key(_F11)) 
			while(key(_F11)) frame; end
			exportar_paquete_niveles();
		end
		if(key(_F12)) 
			while(key(_F12)) frame; end
			from i=1 to 50;
				if(niveles[i].mapa!=0) unload_map(0,niveles[i].mapa); end
				if(niveles[i].fondo!=0) unload_map(0,niveles[i].fondo); end
			end
			let_me_alone();
			menu();
			return;		
		end
		frame;
	end
End

Function pon_nivel_editor(mapa);
Private
	tile;
	id_objeto;
Begin
	ancho=GRAPHIC_INFO(0,mapa,G_WIDE);
	alto=GRAPHIC_INFO(0,mapa,G_HEIGHT);
	
	from i=0 to 9; tiles[i]=map_get_pixel(0,mapa,i,alto-3); end
	from i=1 to 10; enemigos[i]=map_get_pixel(0,mapa,i,alto-2); end
	from i=1 to 5; powerups[i]=map_get_pixel(0,mapa,i,alto-1); end
	
	size=50;
	
	repeat
		tile=map_get_pixel(0,mapa,x,y);	
		from i=0 to 3; if(tile==tiles[i]) objeto_nivel(fpg_tiles,i+1,(x*tilesize/2)-(tilesize/4),(y*tilesize/2)-(tilesize/4),size); end end
		if(tile==tiles[4]) objeto_nivel(fpg_moneda,i+1,(x*tilesize/2)-(tilesize/4),(y*tilesize/2)-(tilesize/4),size); end
		from i=1 to 10; if(tile==enemigos[i]) objeto_nivel(fpg_enemigos,i,(x*tilesize/2)-(tilesize/4),(y*tilesize/2)-(tilesize/4),size); end end
		from i=1 to 5; if(tile==powerups[i]) objeto_nivel(fpg_powerups,i,(x*tilesize/2)-(tilesize/4),(y*tilesize/2)-(tilesize/4),size); end end
		if(x<ancho)
			x++;
		else
			y++; x=0;
		end
	until(y=>alto-3)
End

Process objeto_nivel(file,graph,x,y,size);
Private
	id_objetoanterior;
	minivel;
Begin
	ctype=c_scroll;
	frame;
	if(id_objetoanterior=collision(type objeto_nivel)) 
		if(id_objetoanterior.x==x and id_objetoanterior.y==y) signal(id_objetoanterior,s_kill); end
	end
	minivel=num_nivel;
	while(num_nivel==minivel)
		if(id_editor.x==x and id_editor.y==y and key(_del)) break; end
		frame;
	end
End