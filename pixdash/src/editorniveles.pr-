/*F1:
 nombre del nivel
 descripcion del nivel
F2: importar paquete de tiles
F3: importar musica
F4: importar fondo
F5: nuevo nivel
F6: guardar nivel
F7: anterior nivel
F8: siguiente nivel
F9: nuevo paquete niveles
F10: guardar paquete niveles
F11: exportar paquete niveles al escritorio
F12: salir

flechas: moverse en el tileado

espacio cambia entre: escenario, enemigos, powerups
números del 1 al 9 cambian entre tipo de objetos
número 0 es un bloque vacío*/

Global
	id_editor;
	vacio;
End

Function importar_fondo(string rutafondo);
Private
	string argumentos;
Begin
	if(rutafondo!="")
		chdir(dir_juego+"\bin");
		argumentos='-colors 256 "'+rutafondo+'" "'+savegamedir+'niveles\'+paqueteniveles+'\fondo'+num_nivel+'.jpg"';	
		exec(_P_WAIT,"convert",1,&argumentos);
		mensaje("Fondo importado correctamente");
		chdir(dir_juego);
	else
		mensaje("No se ha importado ningun fondo");
	end
End

Function importar_tiles(string rutatiles);
Begin
	if(rutatiles!="")
		if(fpg_tiles=load_fpg(rutatiles))
			save_fpg(fpg_tiles,savegamedir+"niveles\"+paqueteniveles+"\tiles.fpg");
			mensaje("Tileset importado correctamente");
		end
	else
		mensaje("No se ha importado ningun paquete de tiles");
	end
End

Function preparar_cancion(string rutacancion);
Private
	string argumentos;
	string formatocancion;
	id_txt;
Begin
	if(rutacancion!="")
		stop_song();
		formatocancion+=rutacancion[len(rutacancion)-3];
		formatocancion+=rutacancion[len(rutacancion)-2];
		formatocancion+=rutacancion[len(rutacancion)-1];
		formatocancion=ucase(formatocancion);

		chdir(dir_juego+"\bin");
		id_txt=write(fuente,400,300,4,"Preparando cancion");
		frame;
		if(formatocancion=="OGG")
			//SI NOS MANDA UN OGG:
			argumentos='"'+rutacancion+'" -m -w "'+getenv("TEMP")+'\temp.wav"';
			exec(_P_WAIT,"oggdec",1,&argumentos);
		elseif(formatocancion=="MP3")
			//SI NOS MANDA UN MP3:
			argumentos='-m --output=wave:"'+getenv("TEMP")+'\temp.wav" "'+rutacancion+'"';
			exec(_P_WAIT,"mp3dec",1,&argumentos);
		else 
			RETURN -1;
		end
		//Y EL WAV LO CONVERTIMOS A UN OGG WENO:
		argumentos='"'+getenv("TEMP")+'\temp.wav" -M64 --resample 44100 -o "'+savegamedir+'niveles\'+paqueteniveles+'\nivel'+num_nivel+'.ogg"';
		exec(_P_WAIT,"oggenc",1,&argumentos);
		delete_text(id_txt);
		play_song(load_song(savegamedir+"niveles\"+paqueteniveles+"\nivel"+num_nivel+".ogg"),0);
		
		frame(300);
		rm(getenv("TEMP")+'\temp.wav');
		chdir(dir_juego);
		mensaje("Cancion importada correctamente");
	else
		mensaje("No se ha importado ninguna cancion");
	end
End

Function exportar_paquete_niveles();
Private
	string argumentos;
Begin
	chdir(dir_juego+"\bin");
	//argumentos='-r "'+savegamedir+paqueteniveles+'.pdn" "'+savegamedir+'niveles\'+paqueteniveles+'"';
	//PAL ESCRITORIO windows nt:
	rm(savegamedir+'..\..\..\Escritorio\'+paqueteniveles+'.pdn');
	argumentos='a -tzip "'+savegamedir+'..\..\..\Escritorio\'+paqueteniveles+'.pdn" "'+savegamedir+'niveles\'+paqueteniveles+'" -y';	
	exec(_P_WAIT,"7za",1,&argumentos);
	chdir(dir_juego);
End

Function string input(string texto);
Private
	string texto_input;
	char prompt="_";
	id_txt_input;
	id_txt_input2;
Begin	
	id_txt_input2=write(fuente_peq,400,300,4,texto);
	x=400;
	y=330;
	Loop
		if(key(_esc)) return ""; end
	    If(scan_code==_backspace) scan_code=0; texto_input=substr(texto_input, 0, -1); End
	    If(scan_code==_enter and texto_input!="") while(key(_enter)) frame; end break; End
//		if(ascii>=65 and ascii<=90) ascii+=32; end
//	    If(ascii>=97 and ascii<=122)
	    If(ascii=>32)
	        texto_input+=chr(ascii) ;
			scan_code=0;
	    End
	    if(i<20)
		    id_txt_input=write(fuente_peq, x, y, 4, texto_input + prompt); 
	    else
		    id_txt_input=write(fuente_peq, x, y, 4, texto_input); 
	    end
	    Frame;
	    delete_text(id_txt_input);
	End
	delete_text(id_txt_input2);
	return texto_input;
End 

Function inputnum(string texto);
Private
	string texto_input;
	char prompt="_";
	id_txt_input;
	id_txt_input2;
Begin	
	id_txt_input2=write(fuente_peq,400,300,4,texto);
	x=400;
	y=330;
	Loop
	    If(scan_code==_backspace) scan_code=0; texto_input=substr(texto_input, 0, -1); End
	    If(scan_code==_enter and texto_input!="" and atoi(texto_input)=>32 and atoi(texto_input)=<1000) while(key(_enter)) frame; end break; End  
	    If(ascii>=48 and ascii<=57)
	        texto_input+=chr(ascii) ;
			scan_code=0;
	    End
	    if(i<20)
		    id_txt_input=write(fuente_peq, x, y, 4, texto_input + prompt); 
	    else
		    id_txt_input=write(fuente_peq, x, y, 4, texto_input); 
	    end
	    Frame;
	    delete_text(id_txt_input);
	End
	delete_text(id_txt_input2);
	return atoi(texto_input);
End

Process editor_de_niveles();
Private
	struct niveles[50];
		string nombre;
		string descripcion;
		int mapa;
		int fondo;
	end
	num_niveles;
	tipo_bloque;
	ancho_mapa;
	alto_mapa;
	mapa_scroll;
	ancho_scroll;
	alto_scroll;
	base;
	file_descripciones;
	graph_cursor;
	string argumentos;
Begin
	delete_text(all_text);
	let_me_alone();
	full_screen=false;
	set_mode(800,600,16);
	id_editor=id;
	write(0,0,y+=10,0,"F1. Cambiar nombre y descripcion");
	write(0,0,y+=10,0,"F2: importar paquete de tiles desde el escritorio");
	write(0,0,y+=10,0,"F3: importar musica desde el escritorio");
	write(0,0,y+=10,0,"F4: importar fondo desde el escritorio");
	write(0,0,y+=10,0,"F5: nuevo nivel");
	write(0,0,y+=10,0,"F6: guardar nivel");
	write(0,0,y+=10,0,"F7: anterior nivel");
	write(0,0,y+=10,0,"F8: siguiente nivel");
	write(0,0,y+=10,0,"F9: nuevo paquete niveles");
	write(0,0,y+=10,0,"F10: guardar paquete niveles");
	write(0,0,y+=10,0,"F11: exportar paquete niveles al escritorio");
	write(0,0,y+=10,0,"F12: abrir carpeta niveles");
	write(0,0,y+=10,0,"ESC: salir (NO GUARDA AL SALIR!)");
	y+=10;
	write(0,0,y+=10,0,"Flechas: mover cursor");
	write(0,0,y+=10,0,"Teclas Q-P y A-L: cambiar objeto");
	write(0,0,y+=10,0,"Espacio: alternar entre escenario, enemigo y powerup");

	num_nivel=1;
	paqueteniveles=input("Escribe el nombre del paquete de niveles");
	if(paqueteniveles=="") menu(); return; end
	i=0;
	if(fexists(savegamedir+"niveles\"+paqueteniveles+"\nivel1.png"))
		chdir(dir_juego);
		while(file_exists(savegamedir+"niveles\"+paqueteniveles+"\nivel"+itoa(++i)+".png"))
			num_niveles++;
			niveles[i].mapa=load_png(savegamedir+"niveles\"+paqueteniveles+"\nivel"+i+".png");
			if(file_exists(savegamedir+"niveles\"+paqueteniveles+"\fondo"+i+".jpg"))
				niveles[i].fondo=load_image(savegamedir+"niveles\"+paqueteniveles+"\fondo"+i+".jpg");
			end
		end
		if(fexists(savegamedir+"niveles\"+paqueteniveles+"\descripciones.txt"))
			file_descripciones=fopen(savegamedir+"niveles\"+paqueteniveles+"\descripciones.txt",O_READ);
			i=1;
			while(!feof(file_descripciones))
				niveles[i].nombre=fgets(file_descripciones);
				niveles[i++].descripcion=fgets(file_descripciones);
			end
			fclose(file_descripciones);
		end
		if(fexists(savegamedir+"niveles\"+paqueteniveles+"\tiles.fpg"))
			fpg_tiles=load_fpg(savegamedir+"niveles\"+paqueteniveles+"\tiles.fpg");
		else
			fpg_tiles=load_fpg("fpg/tiles.fpg");
		end
		pon_nivel_editor(niveles[1].mapa);
	else
		chdir(dir_juego);
		mkdir(savegamedir+"niveles\"+paqueteniveles);
		num_nivel=num_niveles=1;
		niveles[num_nivel].mapa=new_map(inputnum("Tamaño horizontal (minimo 32)"),inputnum("Tamaño vertical (minimo 32)"),16);
		niveles[num_nivel].nombre=input("Escribe un nombre para este nivel"); 
		niveles[num_nivel].descripcion=input("Describe brevemente este nivel"); 
		file_descripciones=fopen(savegamedir+"niveles\"+paqueteniveles+"\descripciones.txt",O_WRITE);
		from i=1 to num_niveles;
			fputs(file_descripciones,niveles[i].nombre);
			fputs(file_descripciones,niveles[i].descripcion);
		end
		fclose(file_descripciones);

		base=load_png("fondos\base.png");
		ancho_mapa=graphic_info(0,base,g_width);
		alto_mapa=graphic_info(0,base,g_height);

		vacio=map_get_pixel(0,base,0,alto_mapa-1);
		
		from i=0 to 9; tiles[i]=map_get_pixel(0,base,i,alto_mapa-3); end
		from i=1 to 10; enemigos[i]=map_get_pixel(0,base,i,alto_mapa-2); end
		from i=1 to 5; powerups[i]=map_get_pixel(0,base,i,alto_mapa-1); end

		ancho_mapa=graphic_info(0,niveles[num_nivel].mapa,g_width);
		alto_mapa=graphic_info(0,niveles[num_nivel].mapa,g_height);
		
		from i=0 to 9; map_put_pixel(0,niveles[num_nivel].mapa,i,alto_mapa-3,tiles[i]); end
		from i=1 to 10; map_put_pixel(0,niveles[num_nivel].mapa,i,alto_mapa-2,enemigos[i]); end
		from i=1 to 5; map_put_pixel(0,niveles[num_nivel].mapa,i,alto_mapa-1,powerups[i]); end
		
		fpg_tiles=load_fpg("fpg/tiles.fpg");
	end
	
	graph_cursor=new_map(tilesize,tilesize,16);
	drawing_map(0,graph_cursor);
	drawing_color(rgb(0,0,255));
	draw_box(0,0,tilesize,2);
	draw_box(tilesize-2,0,tilesize,tilesize);
	draw_box(0,0,2,tilesize);
	draw_box(0,tilesize-2,tilesize,tilesize);
	
	x=y=tilesize/4;
	graph=1;
	tipo_bloque=1;
	size=50;
	set_fps(15,0);
	if(fexists(savegamedir+"niveles\"+paqueteniveles+"\nivel"+num_nivel+".ogg")) play_song(load_song(savegamedir+"niveles\"+paqueteniveles+"\nivel"+num_nivel+".ogg"),-1); end
	ancho_mapa=graphic_info(0,niveles[num_nivel].mapa,g_width);
	alto_mapa=graphic_info(0,niveles[num_nivel].mapa,g_height);
	mapa_scroll=new_map(ancho_mapa*tilesize/2,(alto_mapa-3)*tilesize/2,8);
	drawing_map(0,mapa_scroll);
	drawing_color(rgb(255,255,255));
	draw_box(0,((alto_mapa-3)*tilesize/2)-4,ancho_mapa*tilesize/2,(alto_mapa-3)*tilesize/2); //de izq a der
	draw_box(((ancho_mapa)*tilesize/2)-4,0,ancho_mapa*tilesize/2,(alto_mapa-3)*tilesize/2); //de arr a aba
	drawing_color(rgb(127,127,127));
	from i=0 to ancho_mapa; draw_line(i*tilesize/2,0,i*tilesize/2,alto_mapa*tilesize/2); end
	from i=0 to alto_mapa; draw_line(0,i*tilesize/2,ancho_mapa*tilesize/2,i*tilesize/2); end
	start_scroll(0,0,mapa_scroll,niveles[num_nivel].fondo,0,0);
	scroll.camera=id;
	ctype=c_scroll;
	mouse.graph=niveles[num_nivel].mapa;
	loop
		//BLOQUES. tipos= 1:nivel, 2:enemigos; 3:powerups
		if(scan_code=>_Q and scan_code<=_P) graph=scan_code-15; end
		if(scan_code=>_A and scan_code<=_L) graph=scan_code-19; end
		if(key(_space)) while(key(_space)) frame; end if(tipo_bloque<3) tipo_bloque++; else tipo_bloque=1; end end
		if(tipo_bloque==1) file=fpg_tiles; if(graph>4) graph=1; end end
		if(tipo_bloque==2) file=fpg_enemigos; if(graph>11) graph=1; end end
		if(tipo_bloque==3) file=fpg_powerups; if(graph>5) graph=1; end end
		if(key(_del)) 
			map_put_pixel(0,niveles[num_nivel].mapa,x/(tilesize/2),y/(tilesize/2),vacio);
		end
		if(key(_enter)) 
			switch(tipo_bloque)
				case 1: map_put_pixel(0,niveles[num_nivel].mapa,x/(tilesize/2),y/(tilesize/2),tiles[graph-1]); end
				case 2: map_put_pixel(0,niveles[num_nivel].mapa,x/(tilesize/2),y/(tilesize/2),enemigos[graph]); end
				case 3: map_put_pixel(0,niveles[num_nivel].mapa,x/(tilesize/2),y/(tilesize/2),powerups[graph]); end
			end
			if(tipo_bloque!=2) objeto_nivel(file,graph,x,y,size);  else objeto_nivel(file,(graph*10)+1,x,y,size);  end
		end
		if(key(_left) and x!=tilesize/4) x-=tilesize/2; end 
		if(key(_right) and x<=((ancho_mapa-1)*tilesize/2)-(tilesize/4)) x+=tilesize/2; end
		if(key(_up) and y!=tilesize/4) y-=tilesize/2; end 
		if(key(_down) and y<=((alto_mapa-4)*tilesize/2)-(tilesize/4)) y+=tilesize/2; end
		
		//FUNCIONES
		if(key(_F1)) 
			while(key(_F1)) frame; end
			niveles[num_nivel].nombre=input("Escribe un nombre para este nivel"); 
			niveles[num_nivel].descripcion=input("Describe brevemente este nivel"); 
			file_descripciones=fopen(savegamedir+"niveles\"+paqueteniveles+"\descripciones.txt",O_WRITE);
			from i=1 to num_niveles;
				fputs(file_descripciones,niveles[i].nombre);
				fputs(file_descripciones,niveles[i].descripcion);
			end
			fclose(file_descripciones);
			mensaje("Nombres y descripciones actualizadas");
		end
		if(key(_F2)) 
			while(key(_F2)) frame; end
			//importar_tiles(navegador("Elige un Tileset","fpg"));
			navegador("Elige un Tileset","fpg");
			importar_tiles(ruta_navegador);
		end
		if(key(_F3)) 
			while(key(_F3)) frame; end
			navegador("Elige una cancion","ogg,mp3");
			preparar_cancion(ruta_navegador);
		end
		if(key(_F4)) 
			while(key(_F4)) frame; end
			navegador("Elige un fondo","jpg,png,bmp");
			importar_fondo(ruta_navegador);
			stop_scroll(0);
			start_scroll(0,0,mapa_scroll,niveles[num_nivel].fondo,0,0);
			scroll.camera=id;
		end
		if(key(_F5)) 
			while(key(_F5)) frame; end
			num_niveles++;
			num_nivel=num_niveles;
			niveles[num_nivel].mapa=new_map(inputnum("Tamaño horizontal (minimo 32)"),inputnum("Tamaño vertical (minimo 32)"),16);
			ancho_mapa=graphic_info(0,niveles[num_nivel].mapa,g_width);
			alto_mapa=graphic_info(0,niveles[num_nivel].mapa,g_height);
			mapa_scroll=new_map(ancho_mapa*tilesize/2,(alto_mapa-3)*tilesize/2,8);
			drawing_map(0,mapa_scroll);
			drawing_color(rgb(255,255,255));
			draw_box(0,((alto_mapa-3)*tilesize/2)-4,ancho_mapa*tilesize/2,(alto_mapa-3)*tilesize/2); //de izq a der
			draw_box(((ancho_mapa)*tilesize/2)-4,0,ancho_mapa*tilesize/2,(alto_mapa-3)*tilesize/2); //de arr a aba
			drawing_color(rgb(127,127,127));
			from i=0 to ancho_mapa; draw_line(i*tilesize/2,0,i*tilesize/2,alto_mapa*tilesize/2); end
			from i=0 to alto_mapa; draw_line(0,i*tilesize/2,ancho_mapa*tilesize/2,i*tilesize/2); end

			stop_scroll(0);
			start_scroll(0,0,mapa_scroll,niveles[num_nivel].fondo,0,0);
			scroll.camera=id;

			from i=0 to 9; map_put_pixel(0,niveles[num_nivel].mapa,i,alto_mapa-3,tiles[i]); end
			from i=1 to 10; map_put_pixel(0,niveles[num_nivel].mapa,i,alto_mapa-2,enemigos[i]); end
			from i=1 to 5; map_put_pixel(0,niveles[num_nivel].mapa,i,alto_mapa-1,powerups[i]); end

			niveles[num_nivel].nombre=input("Escribe un nombre para este nivel"); 
			niveles[num_nivel].descripcion=input("Describe brevemente este nivel"); 
			file_descripciones=fopen(savegamedir+"niveles\"+paqueteniveles+"\descripciones.txt",O_WRITE);
			from i=1 to num_niveles;
				fputs(file_descripciones,niveles[i].nombre);
				fputs(file_descripciones,niveles[i].descripcion);
			end
			fclose(file_descripciones);

			mensaje("Nuevo nivel");
		end
		if(key(_F6)) 
			while(key(_F6)) frame; end
//			save_png(0,niveles[num_nivel].mapa,savegamedir+"niveles\"+paqueteniveles+"\nivel"+num_nivel+".png");
//			mensaje("Nivel guardado correctamente");
			mensaje("No disponible. Utiliza F10 mejor.");
		end
		if(key(_F7)) 
			while(key(_F7)) frame; end
			if(num_nivel>1) num_nivel--; end
			if(fexists(savegamedir+"niveles\"+paqueteniveles+"\nivel"+num_nivel+".ogg")) play_song(load_song(savegamedir+"niveles\"+paqueteniveles+"\nivel"+num_nivel+".ogg"),-1); end
			ancho_mapa=graphic_info(0,niveles[num_nivel].mapa,g_width);
			alto_mapa=graphic_info(0,niveles[num_nivel].mapa,g_height);
			mapa_scroll=new_map(ancho_mapa*tilesize/2,alto_mapa*tilesize/2,8);
			stop_scroll(0);
			start_scroll(0,0,mapa_scroll,niveles[num_nivel].fondo,0,0);
			scroll.camera=id;
			let_me_alone();
			pon_nivel_editor(niveles[num_nivel].mapa);
			mensaje("Nivel "+num_nivel);
		end
		if(key(_F8)) 
			while(key(_F8)) frame; end
			if(num_nivel<num_niveles) num_nivel++; end
			if(fexists(savegamedir+"niveles\"+paqueteniveles+"\nivel"+num_nivel+".ogg")) play_song(load_song(savegamedir+"niveles\"+paqueteniveles+"\nivel"+num_nivel+".ogg"),-1); end
			ancho_mapa=graphic_info(0,niveles[num_nivel].mapa,g_width);
			alto_mapa=graphic_info(0,niveles[num_nivel].mapa,g_height);
			stop_scroll(0);
			mapa_scroll=new_map(ancho_mapa*tilesize/2,alto_mapa*tilesize/2,8);
			start_scroll(0,0,mapa_scroll,niveles[num_nivel].fondo,0,0);
			scroll.camera=id;
			let_me_alone();
			pon_nivel_editor(niveles[num_nivel].mapa);
			mensaje("Nivel "+num_nivel);
		end
		if(key(_F9)) 
			while(key(_F9)) frame; end
			stop_scroll(0);
			from i=1 to num_niveles;
				unload_map(0,niveles[i].mapa);
				if(niveles[i].fondo!=0) unload_map(0,niveles[i].fondo); end
			end
			let_me_alone();
			editor_de_niveles();
			return;
		end
		if(key(_F10)) 
			while(key(_F10)) frame; end
			from i=1 to num_niveles;
				save_png(0,niveles[i].mapa,savegamedir+"niveles\"+paqueteniveles+"\nivel"+i+".png");
			end
			mensaje("Se han guardado todos los niveles");
		end
		if(key(_F11)) 
			while(key(_F11)) frame; end
			from i=1 to num_niveles;
				save_png(0,niveles[i].mapa,savegamedir+"niveles\"+paqueteniveles+"\nivel"+i+".png");
			end
			exportar_paquete_niveles();
			mensaje("Paquete de niveles exportado al escritorio");
		end
		if(key(_F12))
			while(key(_f12)) frame; end
			argumentos='"'+savegamedir+'niveles"';
			exec(_P_NOWAIT,"explorer",1,&argumentos);
			//ordenar paquete de niveles (en un futuro)
		end
		//if(key(_M)) while(key(_M)) frame; end mensaje(navegador("haz caca","asdfasd")); end
		if(key(_ESC)) 
			while(key(_F12)) frame; end
			from i=1 to 50;
				if(niveles[i].mapa!=0) unload_map(0,niveles[i].mapa); end
				if(niveles[i].fondo!=0) unload_map(0,niveles[i].fondo); end
			end
			let_me_alone();
			menu();
			return;		
		end
		if(tipo_bloque==2) graph=(graph*10)+1; end
		cursor(graph_cursor);
		frame;
		if(tipo_bloque==2) graph=(graph-1)/10; end
	end
End

Process cursor(graph);
Begin
	ctype=c_scroll;
	z=-1;
	x=father.x;
	y=father.y;
	size=father.size;
	frame;
End

Function pon_nivel_editor(mapa);
Private
	tile;
	id_objeto;
Begin
	ancho=GRAPHIC_INFO(0,mapa,G_WIDE);
	alto=GRAPHIC_INFO(0,mapa,G_HEIGHT);
	
	from i=0 to 9; tiles[i]=map_get_pixel(0,mapa,i,alto-3); end
	from i=1 to 10; enemigos[i]=map_get_pixel(0,mapa,i,alto-2); end
	from i=1 to 5; powerups[i]=map_get_pixel(0,mapa,i,alto-1); end
	vacio=map_get_pixel(0,mapa,0,alto-1);	
	size=50;
	
	repeat
		tile=map_get_pixel(0,mapa,x,y);	
		from i=0 to 3; if(tile==tiles[i]) objeto_nivel(fpg_tiles,i+1,(x*tilesize/2)+(tilesize/4),(y*tilesize/2)+(tilesize/4),size); end end
		if(tile==tiles[4]) objeto_nivel(fpg_moneda,1,(x*tilesize/2)+(tilesize/4),(y*tilesize/2)+(tilesize/4),size); end
		from i=1 to 10; if(tile==enemigos[i]) objeto_nivel(fpg_enemigos,(i*10)+1,(x*tilesize/2)+(tilesize/4),(y*tilesize/2)+(tilesize/4),size); end end
		from i=1 to 5; if(tile==powerups[i]) objeto_nivel(fpg_powerups,i,(x*tilesize/2)+(tilesize/4),(y*tilesize/2)+(tilesize/4),size); end end
		if(x<ancho)
			x++;
		else
			y++; x=0;
		end
	until(y=>alto-3)
End

Process objeto_nivel(file,graph,x,y,size);
Private
	id_objetoanterior;
	minivel;
Begin
	ctype=c_scroll;
	frame;
	if(id_objetoanterior=collision(type objeto_nivel)) 
		if(id_objetoanterior.x==x and id_objetoanterior.y==y) signal(id_objetoanterior,s_kill); end
	end
	minivel=num_nivel;
	while(num_nivel==minivel)
		if(id_editor.x==x and id_editor.y==y and key(_del)) break; end
		frame;
	end
End