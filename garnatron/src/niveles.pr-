
//-----------------------------------------------------------------------
// niveles el juego
//-----------------------------------------------------------------------

process juego(nivel);

private

gatillo;
id_texto1;
id_texto2;
direccion=1;
jefe;
n;

struct datos_nivel[100];
	n;
	objeto_nivel; //0:enemigo,1:bono,2:asteroide,3:mina,5:jefe;
	x;
	y;
	tipo;
	patron;
end

Begin
	file=fpg_menu;
	fade_off();
	delete_text(all_text);
	let_me_alone();
	controlador(0);
	x=512;
	y=384;
	z=-100;
	save.nivel=nivel;
	from jugador=1 to 4;
		save.puntos[jugador]=puntos[jugador];
		save.poder[jugador]=poder[jugador];
	end
	if(guardar)
		archivo=fopen(savegamedir+"save.dat",o_write);
		fwrite(archivo,save);
		fclose(archivo);
	end	
	
	ctype=c_screen;
	define_region(1,0,0,1024,768);
	pausa=1;
	n=1;
	from jugador=1 to 4;
		energia[jugador]=20;
		escudo[jugador]=5;
		puntos[jugador]=0;
		poder[jugador]=save.poder[jugador];
	end
	opcion=0;
	distancia=0;


	musica(1);
	graph=20;
	direccion=1;
	size=200;
	if(nivel<5)
		id_texto=write(fuente[0],x,y,4,"AREA: "+nivel);
	else
		id_texto=write(fuente[0],x,y,4,"AREA: Final");
	end
	fade_on();
	timer[2]=0;
	while(timer[2]<300)
		if(direccion==1) graph++; else graph--; end
		if(graph==20) direccion=1; end
		if(graph==44) direccion=0; end
		scroll.y0-=5;
		frame;
	end
	delete_text(id_texto);
	graph=0;
	switch(jugadores)
		case 1:
			id_nave[1]=nave01(512,800,1);
			marcador(1);
		end
		case 2: 
			id_nave[1]=nave01(341,800,1);
			marcador(1);
			id_nave[2]=nave01(642,800,2);
			marcador(2);
		end
		case 3: 
			id_nave[1]=nave01(256,800,1);
			marcador(1);
			id_nave[2]=nave01(512,800,2);
			marcador(2);
			id_nave[3]=nave01(768,800,3);
			marcador(3);
		end
		case 4:
			id_nave[1]=nave01(205,800,1);
			marcador(1);
			id_nave[2]=nave01(410,800,2);
			marcador(2);
			id_nave[3]=nave01(615,800,3);
			marcador(3);
			id_nave[4]=nave01(820,800,4);
			marcador(4);
		end
	end
	
	while(id_nave[1].y>300)
		id_nave[1].y-=10;
		scroll.y0-=3;
		frame;
	end
	while(id_nave[1].y<550)
		id_nave[1].y+=10;
		scroll.y0-=4;
		frame;
	end
	pausa=0;
	LOOP



		if(p[0].botones[7] and gatillo==0)
			gatillo=1;
			if(pausa==0)
				pausa=1;
				graph=20;
				size=300;
				direccion=1;
				id_texto=write(fuente[0],x,y,4,"¿Salir de la partida?");
				boton(512,500,"",1);
				id_texto1=write(fuente[0],512,500,4,"No");
				boton(512,550,"",2);
				id_texto2=write(fuente[0],512,550,4,"Si");
				opcion=1;
			else
				pausa=0;
				graph=0;;
				delete_text(id_texto);
				signal(type boton,s_kill);
				delete_text(0);
			end
		end

		if(not p[0].botones[7] and not p[0].botones[2] and not p[0].botones[3] and gatillo==1) gatillo=0; end

		if(pausa==1)
				
			if(direccion==1) graph++; else graph--; end
			if(graph==20) direccion=1; end
			if(graph==44) direccion=0; end
			if(p[0].botones[2] and gatillo==0 and opcion>1)
				gatillo=1;
				opcion--;
			end
			if(p[0].botones[3] and gatillo==0 and opcion<2)
				gatillo=1;
				opcion++;
			end
			if(p[0].botones[4])
				if(opcion==1) opcion=0; pausa=0; graph=0; delete_text(id_texto); delete_text(id_texto1); delete_text(id_texto2); signal(type boton,s_kill); end
				if(opcion==2) opcion=0; while(p[0].botones[4]) frame; end menu(0); break; end
			end

		end
		if(pausa==0)
			scroll.y0-=3;
//-----------------------------------------------------------------------
// nivel1
//-----------------------------------------------------------------------
			if(nivel==1)
				if(distancia<4000) distancia++; end
				if(distancia==100*n)
					if(n==1 or n==19)
						enemigo(50+100,-50,1,0);
						enemigo(110+100,-60,1,0);
						enemigo(50+100,-150,1,0);
						enemigo(110+100,-160,1,0);
					end
					if(n==2 or n==20)
						enemigo(750+100,-50,1,0);
						enemigo(690+100,-60,1,0);
						enemigo(750+100,-150,1,0);
						enemigo(690+100,-160,1,0);
					end
					if(n==3 or n==21)
						enemigo(50+100,-50,2,8);
						enemigo(750+100,-50,2,1);
					end
					if(n==4 or n==22)
						enemigo(360+100,-50,2,1);
						enemigo(440+100,-50,2,8);
					end
					if(n==5 or n==23)
						enemigo(70+100,-50,1,1);
						enemigo(130+100,-60,1,1);
						enemigo(70+100,-150,1,0);
						enemigo(130+100,-160,1,0);
					end
					if(n==6 or n==24)
						enemigo(730+100,-50,1,1);
						enemigo(670+100,-60,1,1);
						enemigo(730+100,-150,1,0);
						enemigo(670+100,-160,1,0);
					end
					if(n==7 or n==25)
						enemigo(360+100,-50,2,1);
						enemigo(440+100,-50,2,8);
					end
					if(n==8 or n==26)
						enemigo(50+100,-50,2,8);
						enemigo(750+100,-50,2,1);
					end
					if(n==9 or n==27)
						enemigo(70+100,-100,1,1);
						enemigo(130+100,-40,1,1);
						enemigo(190+100,-100,1,1);
					end
					if(n==10 or n==28)
						enemigo(730+100,-100,1,1);
						enemigo(670+100,-40,1,1);
						enemigo(610+100,-100,1,1);
					end
					if(n==11 or n==29)
						enemigo(70+100,-50,2,12);
						enemigo(130+100,-50,2,12);
					end
					if(n==12 or n==30)
						enemigo(730+100,-50,2,5);
						enemigo(670+100,-50,2,5);
					end
					if(n==13 or n==31)
						enemigo(70+100,-50,2,12);
						enemigo(130+100,-50,2,12);
					end
					if(n==14 or n==32)
						enemigo(730+100,-50,2,5);
						enemigo(670+100,-50,2,5);
					end
					if(n==15 or n==33)
						enemigo(70+100,-80,1,1);
						enemigo(130+100,-60,1,0);
						enemigo(190+100,-40,1,1);
						enemigo(610+100,-40,1,1);
						enemigo(670+100,-60,1,0);
						enemigo(730+100,-80,1,1);
					end
					if(n==16 or n==34)
						mina(120+100,-50,2);
						mina(240+100,-20,2);
						mina(360+100,-40,2);
						mina(480+100,-20,2);
						mina(600+100,-50,2);
					end
					if(n==18 or n==36)
						mina(100+100,-20,2);
						mina(250+100,-50,2);
						mina(400+100,-30,2);
						mina(550+100,-50,2);
						mina(700+100,-20,2);
					end
					if(n==7) bono(400+100,-50,3); end
					if(n==17) bono(400+100,-50,2); end
					if(n==27) bono(400+100,-50,1); end
					if(n==37) bono(400+100,-50,2); end
					if(n==38 and jefe==0) jefe=1; musica(2); id_boss01=boss(1); end
					n++;
				end
				if(jefe==1 and vida_boss<1) 
					graph=20;
					direccion=1;
					size=200;
					id_texto=write(fuente[0],x,y,4,"AREA: 1");
					id_texto1=write(fuente[0],x-5,y+15,4,"completada");
					timer[2]=0;
					while(timer[2]<500)
						if(direccion==1) graph++; else graph--; end
						if(graph==20) direccion=1; end
						if(graph==44) direccion=0; end
						scroll.y0-=5;
						frame;
					end
					juego(2);
					break;
				end
			end
//-----------------------------------------------------------------------
// nivel2
//-----------------------------------------------------------------------
			if(nivel==2)
				if(distancia<4000) distancia++; end
				if(distancia==100*n)
					if(n==1 or n==19)
						enemigo(50+100,-50,2,8);
						enemigo(750+100,-50,2,1);
					end
					if(n==2 or n==20)
						enemigo(360+100,-50,2,1);
						enemigo(440+100,-50,2,8);
					end
					if(n==3 or n==21)
						enemigo(200+100,-50,3,0);
					end
					if(n==4 or n==22)
						enemigo(600+100,-50,3,0);
					end
					if(n==5 or n==23)
						enemigo(70+100,-50,2,12);
						enemigo(130+100,-50,2,12);
					end
					if(n==6 or n==24)
						enemigo(730,-50,2,5);
						enemigo(670,-50,2,5);
					end
					if(n==7 or n==25)
						enemigo(70+100,-50,2,12);
						enemigo(130+100,-50,2,12);
					end
					if(n==8 or n==26)
						enemigo(730+100,-50,2,5);
						enemigo(670+100,-50,2,5);
					end
					if(n==10 or n==28)
						enemigo(70+100,-80,1,1);
						enemigo(130+100,-60,1,1);
						enemigo(190+100,-40,1,1);
						enemigo(610+100,-40,1,1);
						enemigo(670+100,-60,1,1);
						enemigo(730+100,-80,1,1);
					end
					if(n==11 or n==29)
						enemigo(50,-50,2,7);
						enemigo(750,-50,2,14);
					end
					if(n==12 or n==30)
						enemigo(360+100,-50,2,14);
						enemigo(440+100,-50,2,7);
					end
					if(n==13 or n==31)
						enemigo(50+100,-50,2,7);
						enemigo(750+100,-50,2,14);
					end
					if(n==15 or n==33)
						enemigo(200+100,-50,3,0);
					end
					if(n==16 or n==34)
						enemigo(600+100,-50,3,0);
					end
					if(n==17 or n==35)
						enemigo(200+100,-50,3,0);
					end
					if(n==18 or n==36)
						enemigo(600+100,-50,3,0);
					end
					if(n==7) bono(400+100,-50,3); end
					if(n==17) bono(400+100,-50,2); end
					if(n==27) bono(400+100,-50,1); end
					if(n==37) bono(400+100,-50,2); end
					if(n==38 and jefe==0) jefe=1; musica(2); id_boss01=boss(2); end
				n++;
				end
				if(jefe==1 and vida_boss<1) 
					graph=20;
					direccion=1;
					size=200;
					id_texto=write(fuente[0],x,y,4,"AREA: 2");
					id_texto1=write(fuente[0],x-5,y+15,4,"completada");
					timer[2]=0;
					while(timer[2]<500)
						if(direccion==1) graph++; else graph--; end
						if(graph==20) direccion=1; end
						if(graph==44) direccion=0; end
						scroll.y0-=5;
						frame;
					end
					juego(3);
					break;
				end
			end
//-----------------------------------------------------------------------
// nivel3
//-----------------------------------------------------------------------
			if(nivel==3)
				if(distancia<4000) distancia++; end
				if(distancia==50*n)

					if(n>1 and n<7)

						asteroide(300+100,-100,50,290000);
						asteroide(400+100,-100,50,270000);
						asteroide(500+100,-100,50,250000);
						asteroide(600+100,-100,50,240000);
					end
					if(n>6 and n<12)
						asteroide(200+100,-100,100,300000);
						asteroide(300+100,-100,100,270000);
						asteroide(500+100,-100,100,250000);

					end
					if(n>11 and n<17)

						asteroide(500+100,-100,150,270000);
						asteroide(600+100,-100,150,240000);
					end
					if(n>16 and n<22)
						asteroide(200+100,-100,100,270000);
						asteroide(500+100,-100,100,290000);
						asteroide(600+100,-100,100,250000);
					end
					if(n>21 and n<37)

						asteroide(300+100,-100,50,290000);
						asteroide(400+100,-100,50,240000);
						asteroide(500+100,-100,50,250000);
						asteroide(600+100,-100,50,270000);
					end
					if(n==7) bono(400+100,-50,3); end
					if(n==17) bono(400+100,-50,2); end
					if(n==27) bono(400+100,-50,1); end
					if(n==37) bono(400+100,-50,2); end
					if(n==38 and jefe==0) jefe=1; musica(2); id_boss01=boss(3); end
				n++;
				end
				if(jefe==1 and vida_boss<1)
					timer[2]=0;
					while(timer[2]<100) frame; end 
					graph=20;
					direccion=1;
					size=200;
					id_texto=write(fuente[0],x,y,4,"AREA: 3");
					id_texto1=write(fuente[0],x-5,y+15,4,"completada");
					timer[2]=0;
					while(timer[2]<500)
						if(direccion==1) graph++; else graph--; end
						if(graph==20) direccion=1; end
						if(graph==44) direccion=0; end
						scroll.y0-=5;
						frame;
					end
					juego(4);
					break;
				end
			end
//-----------------------------------------------------------------------
// nivel4
//-----------------------------------------------------------------------
			
			
			if(nivel==4)
				if(distancia<4000) distancia++; end
				if(distancia==25*n)
					if(n==4 or n==57)
						enemigo(70+100,-50,2,8);
						enemigo(730+100,-50,2,1);
					end
					if(n==7 or n==60)
						enemigo(360+100,-50,2,1);
						enemigo(440+100,-50,2,8);
					end
					if(n==10 or n==63)
						enemigo(250+100,-50,3,0);
					end
					if(n==13 or n==66)
						enemigo(250+100,-50,3,0);
					end
					if(n==16 or n==69)
						enemigo(550+100,-50,3,0);
					end
					if(n==19 or n==72)
						enemigo(550+100,-50,3,0);
					end
					if(n==21 or n==75)
						enemigo(100+100,-50,4,0);
						enemigo(200+100,-50,4,0);
					end
					if(n==24 or n==78)
						enemigo(700+100,-50,4,0);
						enemigo(600+100,-50,4,0);
					end
					if(n==30 or n==84)
						enemigo(50+100,-50,2,12);
						enemigo(130+100,-50,2,12);
					end
					if(n==33 or n==87)
						enemigo(750+100,-50,2,5);
						enemigo(670+100,-50,2,5);
					end
					if(n==36 or n==90)
						enemigo(50+100,-50,2,12);
						enemigo(130+100,-50,2,12);
					end
					if(n==39 or n==93)
						enemigo(750+100,-50,2,5);
						enemigo(670+100,-50,2,5);
					end
					if(n==45 or n==99)
						enemigo(100+100,-50,4,0);
						enemigo(200+100,-50,4,0);
					end
					if(n==48 or n==102)
						enemigo(600+100,-50,4,0);
						enemigo(700+100,-50,4,0);
					end
					if(n==51 or n==105)
						enemigo(100+100,-50,4,0);
						enemigo(200+100,-50,4,0);
					end
					if(n==54 or n==108)
						enemigo(600+100,-50,4,0);
						enemigo(700+100,-50,4,0);
					end
					if(n==28) bono(400+100,-50,3); end
					if(n==56) bono(400+100,-50,2); end
					if(n==83) bono(400+100,-50,1); end
					if(n==111) bono(400+100,-50,2); end
					if(jefe==0) mina(30+100,5,1); mina(770+100,5,1); end
					if(n==114 and jefe==0) jefe=1; musica(2); id_boss01=boss(6); end
					n++;
				end
				if(jefe==1 and vida_boss<1) 
					timer[2]=0;
					while(timer[2]<100) frame; end
					graph=20;
					direccion=1;
					size=200;
					id_texto=write(fuente[0],x,y,4,"AREA: 4");
					id_texto1=write(fuente[0],x-5,y+15,4,"completada");
					timer[2]=0;
					while(timer[2]<500)
						if(direccion==1) graph++; else graph--; end
						if(graph==20) direccion=1; end
						if(graph==44) direccion=0; end
						scroll.y0-=5;
						frame;
					end
					juego(5);
					break;
				end
			end
			
//-----------------------------------------------------------------------
// nivel5
//-----------------------------------------------------------------------
			
			if(nivel==5)
			
				if(jefe==0) jefe=1; id_boss01=boss(9); end
				if(jefe==1 and vida_boss<-99) 
					timer[2]=0;
					while(timer[2]<100) frame; end
					graph=20;
					direccion=1;
					size=200;
					id_texto=write(fuente[0],x,y,4,"AREA: FINAL");
					id_texto1=write(fuente[0],x-5,y+15,4,"completada");
					timer[2]=0;
					while(timer[2]<500)
						if(direccion==1) graph++; else graph--; end
						if(graph==20) direccion=1; end
						if(graph==44) direccion=0; end
						scroll.y0-=5;
						frame;
					end
					historia(2);
					break;
				end
			
			end
			
			if(!exists(id_nave[1]) and !exists(id_nave[2]) and !exists(id_nave[3]) and !exists(id_nave[4]))
				delete_text(all_text);
				graph=20;
				direccion=1;
				size=200;
				id_texto=write(fuente[0],x,y,4,"Fin de");
				id_texto1=write(fuente[0],x-5,y+15,4,"la partida");
				timer[2]=0;
				while(timer[2]<500)
					if(direccion==1) graph++; else graph--; end
					if(graph==20) direccion=1; end
					if(graph==44) direccion=0; end
					scroll.y0-=5;
					frame;
				end
				menu(0);
				break;
			end
		end
	FRAME;
	END
end

function hasta_la_coma(string estring,int num_campo);
private
	string temp;
	w;
	campo_actual;
begin
	from w=0 to len(estring);
		if(estring[w]!=",")
			temp+=""+estring[w];
		else
			if(campo_actual==num_campo)
				break;
			else
				temp="";
				campo_actual++;
			end
		end
	end
	return atoi(temp);
end


//-----------------------------------------------------------------------
// niveles el juego
//-----------------------------------------------------------------------

process fase(nivel);

private

gatillo;
id_texto1;
id_texto2;
direccion=1;
jefe;
n;

string linea;

datos_nivel[500][6];
/*------------------------------------------------------------------
struct datos_nivel[00];
	n;
	objeto_nivel; //0:enemigo,1:bono,2:asteroide,3:mina,5:jefe;
	x;
	y;
	tipo;
	patron;
end
-----------------------------------------------------------------------*/
Begin
	if(os_id==1003) juego(nivel); return; end
	file=fpg_menu;
	fade_off();
	delete_text(all_text);
	let_me_alone();
	controlador(0);
	x=512;
	y=384;
	z=-100;
	save.nivel=nivel;
	from jugador=1 to 4;
		save.puntos[jugador]=puntos[jugador];
		save.poder[jugador]=poder[jugador];
	end
	say("----------------------------------------------before fuck");
	if(guardar)
		archivo=fopen(savegamedir+"save.dat",o_write);
		fwrite(archivo,save);
		fclose(archivo);
	end

	//carga el archivo del nivel
	say("----------------------------------------------fuck");
	archivo=fopen("./niveles/nivel"+nivel+".txt",O_READ);
	while(!feof(archivo))
		linea=fgets(archivo);  
		from j=0 to 5;
			datos_nivel[i][j]=hasta_la_coma(linea,j);
		end
		i++;
	end
	fclose(archivo);
	say("----------------------------------------------fuckthewhat!");
	ctype=c_screen;
	define_region(1,0,0,1024,768);
	pausa=1;
	n=0;
	from jugador=1 to 4;
		energia[jugador]=20;
		escudo[jugador]=5;
		puntos[jugador]=save.puntos[jugador];
		poder[jugador]=save.poder[jugador];
	end
	opcion=0;
	distancia=0;

	musica(1);
	graph=20;
	direccion=1;
	size=100;
	if(nivel<5)
		id_texto=write(fuente[0],x,y,4,"AREA: "+nivel);
	else
		id_texto=write(fuente[0],x,y,4,"AREA: Final");
	end
	fade_on();
	timer[2]=0;
	while(timer[2]<300)
		if(direccion==1) graph++; else graph--; end
		if(graph==20) direccion=1; end
		if(graph==43) direccion=0; end
		scroll.y0-=5;
		frame;
	end
	delete_text(id_texto);
	graph=0;
	switch(jugadores)
		case 1:
			id_nave[1]=nave01(512,800,1);
			marcador(1);
		end
		case 2: 
			id_nave[1]=nave01(341,800,1);
			marcador(1);
			id_nave[2]=nave01(642,800,2);
			marcador(2);
		end
		case 3: 
			id_nave[1]=nave01(256,800,1);
			marcador(1);
			id_nave[2]=nave01(512,800,2);
			marcador(2);
			id_nave[3]=nave01(768,800,3);
			marcador(3);
		end
		case 4:
			id_nave[1]=nave01(205,800,1);
			marcador(1);
			id_nave[2]=nave01(410,800,2);
			marcador(2);
			id_nave[3]=nave01(615,800,3);
			marcador(3);
			id_nave[4]=nave01(820,800,4);
			marcador(4);
		end
	end
	
	from jugador=1 to jugadores;
		while(id_nave[jugador].y>500)
			id_nave[jugador].y-=10;
			scroll.y0-=3;
			frame;
		end
	end
	from jugador=1 to jugadores;
		while(id_nave[jugador].y<650)
			id_nave[jugador].y+=7;
			scroll.y0-=4;
			frame;
		end
	end
	pausa=0;
	LOOP

		if(p[0].botones[7] and gatillo==0)
			gatillo=1;
			if(pausa==0)
				pausa=1;
				graph=20;
				size=100;
				direccion=1;
				id_texto=write(fuente[0],x,y,4,"¿Salir de la partida?");
				boton(512,500,"",1);
				id_texto1=write(fuente[0],512,500,4,"No");
				boton(512,550,"",2);
				id_texto2=write(fuente[0],512,550,4,"Si");
				opcion=1;
			else
				pausa=0;
				graph=0;;
				delete_text(id_texto);
				delete_text(id_texto1);
				delete_text(id_texto2);
				signal(type boton,s_kill);
			end
		end

		if(not p[0].botones[7] and not p[0].botones[2] and not p[0].botones[3] and gatillo==1) gatillo=0; end

		if(pausa==1)
				
			if(direccion==1) graph++; else graph--; end
			if(graph==20) direccion=1; end
			if(graph==43) direccion=0; end
			if(p[0].botones[2] and gatillo==0 and opcion>1)
				gatillo=1;
				opcion--;
			end
			if(p[0].botones[3] and gatillo==0 and opcion<2)
				gatillo=1;
				opcion++;
			end
			if(p[0].botones[4])
				if(opcion==1) opcion=0; pausa=0; graph=0; delete_text(id_texto); delete_text(id_texto1); delete_text(id_texto2); signal(type boton,s_kill); end
				if(opcion==2) opcion=0; while(p[0].botones[4]) frame; end menu(0); break; end
			end

		end
		if(pausa==0)
			scroll.y0-=3;
//-----------------------------------------------------------------------
// empieza el nivel
//-----------------------------------------------------------------------
			while(distancia==datos_nivel[n][0])
			
				switch(datos_nivel[n][1])
					case 0:
						enemigo(datos_nivel[n][2],datos_nivel[n][3],datos_nivel[n][4],datos_nivel[n][5]);
					end
					case 1:
						bono(datos_nivel[n][2],datos_nivel[n][3],datos_nivel[n][4]);
					end
					case 2:
						asteroide(datos_nivel[n][2],datos_nivel[n][3],datos_nivel[n][4],datos_nivel[n][5]);
					end
					case 3:
						mina(datos_nivel[n][2],datos_nivel[n][3],datos_nivel[n][4]);
					end
					case 5:
						id_boss01=boss(datos_nivel[n][4]);
						jefe=1;
						musica(2);
					end
				end
				n++;
			end
			if(jefe==0) distancia++; end

			if(jefe==1 and not exists(id_boss01)) 
				graph=20;
				direccion=1;
				size=100;

				id_texto=write(fuente[0],x,y,4,"AREA: "+nivel);
				id_texto1=write(fuente[0],x-5,y+15,4,"completada");
				timer[2]=0;
				while(timer[2]<500)
					if(direccion==1) graph++; else graph--; end
					if(graph==20) direccion=1; end
					if(graph==43) direccion=0; end
					scroll.y0-=5;
					frame;
				end
				if(nivel<5)
					fase(nivel+1);
				else
					historia(2);
				end
				break;
			end

			if(!exists(id_nave[1]) and !exists(id_nave[2]) and !exists(id_nave[3]) and !exists(id_nave[4]))
				delete_text(all_text);
				graph=20;
				direccion=1;
				size=100;
				id_texto=write(fuente[0],x,y,4,"Fin de");
				id_texto1=write(fuente[0],x-5,y+15,4,"la partida");
				timer[2]=0;
				while(timer[2]<500)
					if(direccion==1) graph++; else graph--; end
					if(graph==20) direccion=1; end
					if(graph==43) direccion=0; end
					scroll.y0-=5;
					frame;
				end
				menu(0);
				break;
			end
		end
	FRAME;
	END
end