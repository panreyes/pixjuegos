
//-----------------------------------------------------------------------
// Maneja los enemigos
//-----------------------------------------------------------------------

process enemigo(x,y,tipo,patron);

private
	id2;
	vida;
	x1;
	angulo;
	angulo2;
	patron2;
	
begin

	z=-10; region=1; file=fpg_enemigos;

	switch(tipo)
		case 1:
			graph=43; vida=3;
		end
		case 2:
			graph=40; vida=5;
		end
		case 3:
			graph=42; vida=5; x1=x;
		end
		case 4:
			graph=41; vida=10;
		end
		case 5:
			graph=44; vida=7;
		end
		case 6:
			graph=45; vida=5; angulo2=pi/2; x1=x;
			if(patron==1)
				canon(0,-10);
			end
			if(patron==2)
				ametralladora(0,-10);
			end
			if(patron==3)
				canon_laser(0,-10,1);
			end
			if(patron==4)
				canon_laser(0,-10,2);
			end
		end
		case 7:
			graph=46; vida=5;
		end
	end

	loop
		if(pausa==0)

			if(tipo==1)	//

				y+=4;
				if(patron==1 and y==100)
					disparo02(x,y,3*pi/2,4);
					suena(s_misil);
				end

			end
			if(tipo==2)	//zig-zag

				if(patron==1)
					y+=5; if(y>240) patron=2; end
				end
				if(patron==2)
					y-=5; x-=3; if(y<100) patron=3; end
				end
				if(patron==3)
						y+=5;
				end
				if(patron==4)
					y-=5; x-=3; if(y<100) patron=1; end
				end
				if(patron==5)
					y+=5; if(y>240) patron=4; end
				end
				if(patron==6)
					y-=5; x+=3; if(y<100) patron=1; end
				end
				if(patron==7)
					y+=5; if(y>240) patron=6; end
				end
				if(patron==8)
					y+=5; if(y>240) patron=9; end
				end
				if(patron==9)
					y-=5; x+=3; if(y<100) patron=10; end
				end
				if(patron==10)
						y+=5;
				end
				if(patron==11)
					y-=5; x+=3; if(y<100) patron=8; end
				end
				if(patron==12)
					y+=5; if(y>240) patron=11; end
				end
				if(patron==13)
					y-=5; x-=3; if(y<100) patron=8; end
				end
				if(patron==14)
					y+=5; if(y>240) patron=13; end
				end

				if(y==150)
					disparo02(x-5,y+5,3*pi/2,1);
					disparo02(x+5,y+5,3*pi/2,1);
					suena(s_laser3);
				end

			end
			if(tipo==3)	//m.a.s.

				y+=5;
				x=x1+get_distx(angulo,100);
				angulo+=5000;
				if(patron==25)
					disparo02(x,y-5,3*pi/2,2);
					disparo02(x,y+5,3*pi/2,2);
					disparo02(x,y+15,3*pi/2,2);
					suena(s_laser3);
					patron=0;
				end
				if(patron<100) patron++; end

			end
			if(tipo==4)	//ponedora de minas

				y+=4;
				if(patron==1 and x<850) x+=4; end
				if(patron==2 and x>150) x-=4; end
				if(patron2==25 ) mina(x-20,y-20,1); mina(x+20,y-20,1); end
				if(patron2<60) patron2++; else patron2=0; end

			end
			if(tipo==5) //laser

				y+=4;
				if(patron==1 and x<850) x+=4; end
				if(patron==2 and x>150) x-=4; end
				if(patron2==25 ) bomba02(0,30,270000,75,1); end
				if(patron2<26) patron2++; end
			end
			if(tipo==6) //cañon

				y+=4;
				x=x1+get_distx(angulo,100);
				angulo+=2000;
				y=y+get_disty(angulo2,5);
				angulo2+=3000;
			end
			if(tipo==7) //escudo

				y+=4;
				if(patron==1 and x<850) x+=4; end
				if(patron==2 and x>150) x-=4; end
				if(patron2==25 ) bomba02(0,0,0,100,3); end
				if(patron2<26) patron2++; end
			end

			id2=(collision(type disparo01));
			if(id2) vida--;
				signal(id2,s_kill);
				explosion(id2.x,id2.y,2,25);
				puntos[id2.jugador]+=1;
			end
			if(vida<1) 
				explosion(x,y,1,100);
				if(ops.particulas==1)
					explotalo(x,y,z,alpha,angle,file,graph,40);
				end
				puntos[id2.jugador]+=10;
				break;
			end
			from jugador=1 to 4;
				if(exists(id_nave[jugador]))
					id2=(collision(id_nave[jugador])); 
					if(id2) id_nave[jugador].estado=-1; explosion(x,y,3,100);
						if(ops.particulas==1)
							explotalo(x,y,z,alpha,angle,file,graph,40);
						end
						return;
					end
				end
			end
			id2=(collision(type laser));
			if(id2)
				explosion(x,y,1,100);
				if(ops.particulas==1)
					explotalo(x,y,z,alpha,angle,file,graph,40);
				end
				puntos[id2.jugador]+=10;
				break;
			end
			id2=(collision(type bomba));
			if(id2)
				explosion(x,y,1,100);
				if(ops.particulas==1)
					explotalo(x,y,z,alpha,angle,file,graph,40);
				end
				puntos[id2.jugador]+=10;
				break;
			end
			if(y>800)
				break;
			end
		end
		frame;
	end
end

//-----------------------------------------------------------------------
// Maneja las minas
//-----------------------------------------------------------------------

process mina(x,y,tipo);

private 
	vida;
	angulo;
	x1;
	id2;
	anima;
	direccion=1;
	distancias[5];

begin
	z-=15;
	region=1;
	file=fpg_enemigos;
	if(tipo==2)
		vida=5;
	elseif(tipo==3)
		vida=15;
		graph=35;
	end
	x1=x;
	loop
		if(pausa==0)
			if(tipo==1)//baja, inmune a disparos
				anima++;
				if(anima>5) anima=0;
					if(direccion==1) graph++; end
					if(direccion==-1) graph--; end
				end
				if(graph>33) direccion=-1; graph=33; end
				if(graph<31) direccion=1; graph=31; end

				y+=3;
				x=+x1+get_distx(angulo,15);	
				angulo+=3000;

				if(y>800) break; end
			end
			if(tipo==2)//persigue
				from jugador=1 to 4;
					if(exists(id_nave[jugador]))
						distancias[jugador]=get_dist(id_nave[jugador]);
					else
						distancias[jugador]=1000000;
					end
				end
		
				if(distancias[1]<distancias[2] and distancias[1]<distancias[3] and distancias[1]<distancias[4])
					jugador=1;
					graph=35;
				elseif(distancias[2]<distancias[1] and distancias[2]<distancias[3] and distancias[2]<distancias[4])
					jugador=2;
					graph=36;
				elseif(distancias[3]<distancias[1] and distancias[3]<distancias[2] and distancias[3]<distancias[4])
					jugador=3;
					graph=37;
				elseif(distancias[4]<distancias[1] and distancias[4]<distancias[2] and distancias[4]<distancias[3])
					jugador=4;
					graph=38;
				end
				if(exists(id_nave[jugador]))
					if(id_nave[jugador].x>x) x+=2; angle+=pi/7; end
					if(id_nave[jugador].x<x) x-=2; angle+=pi/9; end
					if(id_nave[jugador].y>y) y+=2; angle+=pi/7; end
					if(id_nave[jugador].y<y) y-=2; angle+=pi/9; end
				end
		
				id2=(collision(type disparo01));
					if(id2) vida--; signal(id2,s_kill); explosion(id2.x,id2.y,2,25);  puntos[id2.jugador]+=1; end
				if(vida<1) explosion(x,y,1,100); if(ops.particulas==1) explotalo(x,y,z,alpha,angle,file,graph,40); end puntos[id2.jugador]+=10; break; end
			end
			if(tipo==3)//explota
				y+=2;
				from jugador=1 to 4;
					if(exists(id_nave[jugador]))
						if(get_dist(id_nave[jugador])<100)
							explosion(x,y,1,100);
							if(ops.particulas==1)
								explotalo(x,y,z,alpha,angle,file,graph,40);
							end
							from angle=0 to 2*pi step pi/6;
								disparo02(x,y,angle,3);
							end
							return;
						end
					end
				end

				id2=(collision(type disparo01));
				if(id2) vida--; signal(id2,s_kill); explosion(id2.x,id2.y,2,25);  puntos[id2.jugador]+=1; end
				if(vida<1)
					explosion(x,y,1,100);
					if(ops.particulas==1)
						explotalo(x,y,z,alpha,angle,file,graph,40);
					end
					puntos[id2.jugador]+=10;
					from angle=0 to 2*pi step pi/6;
						disparo02(x,y,angle,3);
					end
					break;
				end
			end
			from jugador=1 to 4;
				if(exists(id_nave[jugador]))
					id2=(collision(id_nave[jugador]));
					if(id2) id_nave[jugador].estado=-1; explosion(x,y,3,100); if(ops.particulas==1) explotalo(x,y,z,alpha,angle,file,graph,40); end return; end
				end
			end
			id2=(collision(type laser));
			if(id2) explosion(x,y,1,100); if(ops.particulas==1) explotalo(x,y,z,alpha,angle,file,graph,40); end puntos[id2.jugador]+=10; break; end
			id2=(collision(type bomba));
			if(id2) explosion(x,y,1,100); if(ops.particulas==1) explotalo(x,y,z,alpha,angle,file,graph,40); end puntos[id2.jugador]+=10; break; end
		end
		frame;
	end
end
//-----------------------------------------------------------------------
// asteroides que caen de la parte superior de la pantalla
//-----------------------------------------------------------------------

PROCESS asteroide(x,y,size,angulo)

private
vida;
id2;

BEGIN
	z-=15;
	graph=21;
	region=1;
	file=fpg_enemigos;
	if(size>99) vida=20; end
	if(size>49 and size<100) vida=10; end
	if(size<50) vida=5; end
	loop
		if(pausa==0)

			x+=get_distx(angulo,4);
			y+=get_disty(angulo,4);
			
		//	angle+=pi/size;

		end
		
		id2=(collision(type laser));
		if(id2)
			if(size>99)
				puntos[id2.jugador]+=30;
			else 
				puntos[id2.jugador]+=10;
			end
			vida=0;
		end
/*		id2=(collision(type bomba));
		if(id2) 
			if(size>99)
				puntos[id2.jugador]+=30;
			else 
				puntos[id2.jugador]+=10;
			end
			vida=0;
		end*/
		id2=(collision(type disparo01));
		if(id2)
			vida--;
			signal(id2,s_kill);
			explosion(id2.x,id2.y,2,25);
			puntos[id2.jugador]+=1;
			if(vida<1)
				if(size>99)
					puntos[id2.jugador]+=30;
				else 
					puntos[id2.jugador]+=10;
				end
			end
		end
		if(vida<1)
			if(size>30)
				asteroide(x,y,size/3,pi/2);
				asteroide(x,y,size/3,pi*5/4);
				asteroide(x,y,size/3,pi*7/4);
				explosion(x,y,1,200);
				if(ops.particulas==1) explotalo(x,y,z,alpha,angle,file,graph,20); end
				break;

			else
				explosion(x,y,1,200);
				if(ops.particulas==1) explotalo(x,y,z,alpha,angle,file,graph,40); end
				break;
			end

		end
		if(y>800 or x<-30 or x>1100 or y<-200) break; end
		from jugador=1 to 4;
			if(exists(id_nave[jugador]))
				if(collision(id_nave[jugador]))
					id_nave[jugador].estado=-1;
					explosion(x,y,3,200);
					if(ops.particulas==1) explotalo(x,y,z,alpha,angle,file,graph,40); end
					return;
				end
			end
		end
		FRAME;
	end	
END

//-----------------------------------------------------------------------
// cañon
//-----------------------------------------------------------------------

process canon(x1,y1);

private angulo;

begin
	graph=50; z=-85; file=fpg_enemigos; jugador=1; priority=-2;
	loop
		if(pausa==0)
			if(exists(father))
				x=father.x+x1;
				y=father.y+y1;
			else
				break;
			end
			if(!exists(id_nave[1]) and !exists(id_nave[2]) and !exists(id_nave[3]) and !exists(id_nave[4]))
				angulo=pi/2;
			end
			if(exists(id_nave[jugador]))
				angulo=get_angle(id_nave[jugador]);
			else
				jugador++;
			end
			angle=angulo;
			patron++;
			if(patron==125)
				disparo02(x+get_distx(angle+45000,10),y+get_disty(angle+45000,5),angle+3000,2);
				disparo02(x+get_distx(angle-45000,10),y+get_disty(angle-45000,5),angle-3000,2);
				suena(s_laser3);
				patron=0;
				jugador++;
			end
			if(jugador>4) jugador=1; end
		end
		frame;
	end
end


//-----------------------------------------------------------------------
// ametralladora
//-----------------------------------------------------------------------

process ametralladora(x1,y1);

private angulo;

begin
	graph=51; z=-85; file=fpg_enemigos; jugador=1; priority=-2;
	loop
		if(pausa==0)
			if(exists(father))
				x=father.x+x1;
				y=father.y+y1;
			else
				break;
			end
			if(!exists(id_nave[1]) and !exists(id_nave[2]) and !exists(id_nave[3]) and !exists(id_nave[4]))
				angulo=pi/2;
			end
			if(exists(id_nave[jugador]))
				angulo=get_angle(id_nave[jugador]);
			else
				jugador++;
			end
			angle=angulo;
			patron++;
			if(patron==110 or patron==112 or patron==114 or patron==116 or patron==118 or patron==120 or patron==122 or patron==124)
				disparo02(x+get_distx(angle+45000,10),y+get_disty(angle+45000,5),angle,2);
				suena(s_laser3);
			end
			if(patron>124)
				patron=0;
				jugador++;
			end
			if(jugador>4) jugador=1; end
		end
		frame;
	end
end


//-----------------------------------------------------------------------
// cañon laser
//-----------------------------------------------------------------------

process canon_laser(x1,y1,tipo);

private angulo;

begin
	graph=52; z=-85; file=fpg_enemigos; jugador=1; priority=-2;
	loop
		if(pausa==0)
			if(exists(father))
				x=father.x+x1;
				y=father.y+y1;
			else
				break;
			end
			if(!exists(id_nave[1]) and !exists(id_nave[2]) and !exists(id_nave[3]) and !exists(id_nave[4]))
				angulo=pi/2;
			end
			if(patron<125)
				if(exists(id_nave[jugador]))
					angulo=get_angle(id_nave[jugador]);
				else
					jugador++;
				end
			end
			angle=angulo;
			patron++;
			if(patron==125)
				bomba02(get_distx(angle,20),get_disty(angle,20),angle,50,tipo);
			end
			if(patron>250) patron=0; jugador++; end
			if(jugador>4) jugador=1; end
		end
		frame;
	end
end