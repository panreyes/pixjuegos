#IFDEF TACTIL
import "mod_multi";
#ENDIF

Const
	b_izquierda=0;
	b_derecha=1;
	b_arriba=2;
	b_abajo=3;
	b_1=4;
	b_2=5;
	b_3=6;
	b_salir=7;
End

Global
	struct joy_profiles[10];
		string name="";
		_b_1=0;
		_b_2=1;
		_b_3=2;
		_b_salir=8;
	end

	graph_dedo;
	graph_boton_1;
	graph_boton_2;
	graph_boton_3;
	
	graph_boton_izquierda;
	graph_boton_derecha;
	graph_boton_arriba;
	graph_boton_abajo;
	
	id_gamepad;
	gamepad_boton_separacion=40;
	gamepad_boton_size=40;
	gamepad_botones=3;
	
	key_b_izquierda=_LEFT;
	key_b_derecha=_RIGHT;
	key_b_arriba=_UP;
	key_b_abajo=_DOWN;
	key_b_1=_A;
	key_b_2=_S;
	key_b_3=_D;
	key_b_salir=_ESC;
	
End

Process controlador(jugador);
Private
	pov;
	povy;
	povx;
	axis_x;
	axis_y;
Begin
	priority=10;
	if(os_id==1003 and jugador==1 and p[1].control==0 and posibles_jugadores==1)
		if(ancho_pantalla==0 or alto_pantalla==0)
			ancho_pantalla=graphic_info(0,0,g_width);
			alto_pantalla=graphic_info(0,0,g_height);
		end
		if(graph_dedo<1)
			pinta_gamepad();			
		end
		if(!exists(id_gamepad))
			id_gamepad=gamepad_virtual();
		end
	End
	
	Loop
		if(os_id==1003 and !focus_status) //en android, si estamos en 2º plano, nos vamos al aire
			let_me_alone();
			fade_music_off(500);
			while(is_playing_song()) frame; end
			exit();
		end

		if(!exists(father)) return; end
		from i=0 to 7; p[jugador].botones[i]=0;	end		
		if(p[jugador].control==-2) //GLOBAL: Para menús y tal
			priority=1;
			from i=1 to posibles_jugadores+1;
				controlador(i);
			end
			loop
				from j=0 to 7;
					p[0].botones[j]=0;
				end
				from i=1 to posibles_jugadores;
					from j=0 to 7;
						if(p[i].botones[j]) p[0].botones[j]=1; end
					end
				end
				frame;
			end
		end		
		if(p[jugador].control==-1) return; end
		If(p[jugador].control==0)  // teclado
			If(key(key_b_izquierda)) p[jugador].botones[0]=1; End
			If(key(key_b_derecha)) p[jugador].botones[1]=1; End
			If(key(key_b_arriba)) p[jugador].botones[2]=1; End
			If(key(key_b_abajo)) p[jugador].botones[3]=1; End
			If(key(key_b_1)) p[jugador].botones[4]=1; End
			If(key(key_b_2)) p[jugador].botones[5]=1; End
			If(key(key_b_3)) p[jugador].botones[6]=1; End
			if(key(key_b_salir)) p[jugador].botones[7]=1; end
		End
		If(p[jugador].control>0)  // joysticks
			POV=joy_gethat(joysticks[p[jugador].control],0); POVx=0; POVy=0;
			
			if(os_id==os_caanoo)
				axis_x = joy_getaxis(2,0);
				axis_y = joy_getaxis(2,1);
	
				// EJES (en teoría debería ser lo mismo que analógico :P)
				if(axis_x<-16384) POVx=1; end
				if(axis_x>16384) POVx=2; end
				if(axis_y<-16384) POVy=1; end
				if(axis_y>16384) POVy=2; end
			end

			// ANALOGICO
			IF (get_joy_position(joysticks[p[jugador].control],0)<-10000) POVx=1; END // izquierda
			IF (get_joy_position(joysticks[p[jugador].control],0)>10000) POVx=2; END // derecha
			IF (get_joy_position(joysticks[p[jugador].control],1)<-7500) POVy=1; END // arriba
			IF (get_joy_position(joysticks[p[jugador].control],1)>7500) POVy=2; END // abajo

			// DIGITAL (LINUX?)
			IF (get_joy_position(joysticks[p[jugador].control],3)<-10000) POVx=1; END // izquierda
			IF (get_joy_position(joysticks[p[jugador].control],3)>10000) POVx=2; END // derecha
			IF (get_joy_position(joysticks[p[jugador].control],4)<-7500) POVy=1; END // arriba
			IF (get_joy_position(joysticks[p[jugador].control],4)>7500) POVy=2; END // abajo
 
			// DIGITAL
			IF (POV==1) POVy=1; END // arriba
			IF (POV==3) POVy=1; POVx=2; END // der
			IF (POV==9) POVy=1; POVx=1; END // izq
			IF (POV==4) POVy=2; END // abajo
			IF (POV==6) POVy=2; POVx=2; END // der
			IF (POV==12) POVy=2; POVx=1; END // izq
			IF (POV==2) POVx=2; END // der
			IF (POV==8) POVx=1; END // izq
		
			If(povx==1) p[jugador].botones[0]=1; End
			If(povx==2) p[jugador].botones[1]=1; End
			If(povy==1) p[jugador].botones[2]=1; End
			If(povy==2) p[jugador].botones[3]=1; End
		
			if(os_id==os_wii)
				If(get_joy_button(joysticks[p[jugador].control],2)) p[jugador].botones[4]=1; End
				If(get_joy_button(joysticks[p[jugador].control],3)) p[jugador].botones[5]=1; End
				If(get_joy_button(joysticks[p[jugador].control],1)) p[jugador].botones[6]=1; End
				If(get_joy_button(joysticks[p[jugador].control],6)) p[jugador].botones[7]=1; End
			elseif(os_id==os_caanoo)
			//elseif(os_id==os_caanoo or os_id==os_dingux_a320 or os_id==os_gp2x or os_id==os_gp2x_wiz or os_id==os_gp32 or os_id==os_dc)
				If(joy_getbutton(0,12)) p[jugador].botones[4]=1; End
				If(joy_getbutton(0,14)) p[jugador].botones[5]=1; End
				If(joy_getbutton(0,13)) p[jugador].botones[6]=1; End
				If(joy_getbutton(0,8)) p[jugador].botones[7]=1; End
			elseif(os_id==1003)
				If(joy_getbutton(joysticks[p[jugador].control],0)) p[jugador].botones[b_arriba]=1; End
				If(joy_getbutton(joysticks[p[jugador].control],1)) p[jugador].botones[b_abajo]=1; End
				If(joy_getbutton(joysticks[p[jugador].control],2)) p[jugador].botones[b_izquierda]=1; End
				If(joy_getbutton(joysticks[p[jugador].control],3)) p[jugador].botones[b_derecha]=1; End
				If(joy_getbutton(joysticks[p[jugador].control],8) or joy_getbutton(joysticks[p[jugador].control],20)) p[jugador].botones[b_1]=1; End
				If(joy_getbutton(joysticks[p[jugador].control],5) or joy_getbutton(joysticks[p[jugador].control],21)) p[jugador].botones[b_2]=1; End
				If(joy_getbutton(joysticks[p[jugador].control],6) or joy_getbutton(joysticks[p[jugador].control],22)) p[jugador].botones[b_3]=1; End
				If(joy_getbutton(joysticks[p[jugador].control],19) or joy_getbutton(joysticks[p[jugador].control],9)) p[jugador].botones[b_salir]=1; End
				if(key(key_b_salir)) p[jugador].botones[b_salir]=1; end
			else
				If(get_joy_button(joysticks[p[jugador].control],joy_profiles[joysticks[p[jugador].control]]._b_1)) p[jugador].botones[4]=1; End
				If(get_joy_button(joysticks[p[jugador].control],joy_profiles[joysticks[p[jugador].control]]._b_2)) p[jugador].botones[5]=1; End
				If(get_joy_button(joysticks[p[jugador].control],joy_profiles[joysticks[p[jugador].control]]._b_3)) p[jugador].botones[6]=1; End
				If(get_joy_button(joysticks[p[jugador].control],joy_profiles[joysticks[p[jugador].control]]._b_salir)) p[jugador].botones[7]=1; End
			end
		End
		Frame;
	End
End

Function configurar_controles();
Begin
	//1. Averiguamos cuantos joysticks tenemos
	njoys=number_joy();
	
	//1.1 En Android, descontamos el último joystick ya que se trata de un sensor
	if(os_id==1003)
		njoys=njoys-1;
	end

	//2. ¿Cuántos de ellos son utilizables/tienen al menos dos ejes y dos botones?
	from i=0 to (njoys-1);
		if(joy_numbuttons(i)=>2)
			posibles_jugadores++;
			joysticks[posibles_jugadores]=i;
			joy_profiles[i].name=lcase(JOY_NAME(i));
			//say(joy_profiles[posibles_jugadores].name);
			if(find(joy_profiles[i].name,"xbox")=>0)
				joy_profiles[i]._b_1=2;
				joy_profiles[i]._b_2=0;
				joy_profiles[i]._b_3=1;
				joy_profiles[i]._b_salir=6;
			end
		end
	end
	
	posibles_jugadores++; //+1 por el jugador en teclado
	//3. Si tenemos X joysticks, X jugadores jugarán con joystick y el siguiente jugará con teclado
	
	//por defecto no tendrán ningún control asignado
	from i=1 to 5; p[i].control=-1; end
	
	if(posibles_jugadores==1) //no hay joysticks
		p[1].control=0;
	end
	if(posibles_jugadores==2) //hay 1 joysticks
		p[1].control=1;
		p[2].control=0;
	end
	if(posibles_jugadores==3) //hay 2 joysticks
		p[1].control=1;
		p[2].control=2;
		p[3].control=0;
	end
	if(posibles_jugadores==4) //hay 3 joysticks
		p[1].control=1;
		p[2].control=2;
		p[3].control=3;
		p[4].control=0;
	end
	if(posibles_jugadores>4) //hay 4 joysticks
		p[1].control=1;
		p[2].control=2;
		p[3].control=3;
		p[4].control=4;
		p[5].control=0;
	end

	//si estamos con la recreativa, no dejaremos jugar con el teclado
	//if(arcade_mode) posibles_jugadores--; end
	//o si, por si acaso
	
	p[0].control=-2; //Esto son los menus :)
	
	//controladores especiales!
	//if(os_id==os_caanoo) //caanoo
	if(os_id==os_caanoo or os_id==os_dingux_a320 or os_id==os_gp2x or os_id==os_gp2x_wiz or os_id==os_gp32 or os_id==os_dc)
		joysticks[0]=1;
		p[1].control=1;
		posibles_jugadores=1;
	end
	
	if(os_id==os_wii) //wii
		joysticks[0]=0;
//		joysticks[1]=1; //por ahora no funciona más de un jugador :(
//		joysticks[2]=2;
//		joysticks[3]=3;
		p[1].control=1;
		p[2].control=2;
		p[3].control=3;
		p[4].control=4;
//		posibles_jugadores=4;
		posibles_jugadores=1;
	end
	
	if(os_id==1003) //android!
		key_b_salir=102;
		if(posibles_jugadores>1) //con joysticks, sin gamepadvirtual
			posibles_jugadores--;
		else
			p[1].control=0;
		end
	end
	
	//Y creo que ya estamos :)
End

Process gamepad_virtual();
Begin
	boton_tactil(gamepad_boton_separacion*2,alto_pantalla-(gamepad_boton_separacion*3),graph_boton_arriba,1,b_arriba);
	boton_tactil(gamepad_boton_separacion*1,alto_pantalla-(gamepad_boton_separacion*2),graph_boton_izquierda,1,b_izquierda);
	boton_tactil(gamepad_boton_separacion*3,alto_pantalla-(gamepad_boton_separacion*2),graph_boton_derecha,1,b_derecha);
	boton_tactil(gamepad_boton_separacion*2,alto_pantalla-gamepad_boton_separacion,graph_boton_abajo,1,b_abajo);
	
	boton_tactil(ancho_pantalla-(gamepad_boton_separacion*2)+get_distx(7*pi/6,gamepad_boton_separacion),alto_pantalla-(gamepad_boton_separacion*2)+get_disty(7*pi/6,gamepad_boton_separacion*2/3),graph_boton_1,1,b_1);
	boton_tactil(ancho_pantalla-(gamepad_boton_separacion*2)+get_distx(11*pi/6,gamepad_boton_separacion),(alto_pantalla-gamepad_boton_separacion*2)+get_disty(11*pi/6,gamepad_boton_separacion*2/3),graph_boton_2,1,b_2);
	if(gamepad_botones==3)
		boton_tactil(ancho_pantalla-(gamepad_boton_separacion*2)+get_distx(pi/2,gamepad_boton_separacion/1),alto_pantalla-(gamepad_boton_separacion*2)+get_disty(pi/2,gamepad_boton_separacion/1),graph_boton_3,1,b_3);
	end
	
	priority=8;
	loop
		if(mouse.left) dedo(mouse.x,mouse.y); end
#IFDEF TACTIL
		for(i=0; i<10; i++)
			if(multi_info(i, "ACTIVE") > 0)
				dedo(multi_info(i, "X"),multi_info(i, "Y"));
			end
		end
#ENDIF
		frame;
	end
End

Process dedo(x,y);
Begin
	priority=6;
	graph=graph_dedo;
	//alpha=0;
	frame;
End

Process boton_tactil(x,y,graph,jugador,boton);
Begin
	priority=4;
	z=-512;
	alpha=128;
	while(exists(father))
		if(collision_box(type dedo))
			p[jugador].botones[boton]=1;
		end
		frame; 
	end
End

Function pinta_gamepad();
Begin
	graph_dedo=new_map(gamepad_boton_size*2/3,gamepad_boton_size*2/3,16);
	drawing_color(rgb(128,128,128));
	drawing_map(0,graph_dedo);
//	draw_box(0,0,gamepad_boton_size/2,gamepad_boton_size*2/3);
	draw_fcircle(gamepad_boton_size/3,gamepad_boton_size/3,gamepad_boton_size/3-1);

	if(os_id!=1003) mouse.graph=graph_dedo; end
	
	graph_boton_1=new_map(gamepad_boton_size*1.5,gamepad_boton_size*1.5,16);
	drawing_map(0,graph_boton_1);
	drawing_color(rgb(0,255,0));
	draw_fcircle(gamepad_boton_size*1.5/2,gamepad_boton_size*1.5/2,gamepad_boton_size*1.5/2-1);
	drawing_color(rgb(255,255,255));
	draw_circle(gamepad_boton_size*1.5/2,gamepad_boton_size*1.5/2,gamepad_boton_size*1.5/2-1);
	
	graph_boton_2=new_map(gamepad_boton_size*1.5,gamepad_boton_size*1.5,16);
	drawing_map(0,graph_boton_2);
	drawing_color(rgb(255,0,0));
	draw_fcircle(gamepad_boton_size*1.5/2,gamepad_boton_size*1.5/2,gamepad_boton_size*1.5/2-1);
	drawing_color(rgb(255,255,255));
	draw_circle(gamepad_boton_size*1.5/2,gamepad_boton_size*1.5/2,gamepad_boton_size*1.5/2-1);
	
	graph_boton_3=new_map(gamepad_boton_size*1.5,gamepad_boton_size*1.5,16);
	drawing_map(0,graph_boton_3);
	drawing_color(rgb(0,0,255));
	draw_fcircle(gamepad_boton_size*1.5/2,gamepad_boton_size*1.5/2,gamepad_boton_size*1.5/2-1);
	drawing_color(rgb(255,255,255));
	draw_circle(gamepad_boton_size*1.5/2,gamepad_boton_size*1.5/2,gamepad_boton_size*1.5/2-1);
	
	graph_boton_arriba=new_map(2*gamepad_boton_size,gamepad_boton_size,16);
	drawing_map(0,graph_boton_arriba);
	drawing_color(rgb(128,128,128));
	i=0;
	from j=0 to gamepad_boton_size/2;
		draw_line(gamepad_boton_size-i,j,gamepad_boton_size+i,j);
		i+=2;
	end
	from j=gamepad_boton_size/2 to gamepad_boton_size;
		draw_line(gamepad_boton_size-i,j,gamepad_boton_size+i,j);
		i-=1;
	end
	drawing_color(rgb(255,255,255));
	draw_line(0,gamepad_boton_size/2,gamepad_boton_size,0);
	draw_line(gamepad_boton_size,0,2*gamepad_boton_size,gamepad_boton_size/2);
	draw_line(2*gamepad_boton_size,gamepad_boton_size/2,6*gamepad_boton_size/4,gamepad_boton_size);
	draw_line(6*gamepad_boton_size/4,gamepad_boton_size,2*gamepad_boton_size/4,gamepad_boton_size);
	draw_line(2*gamepad_boton_size/4,gamepad_boton_size,0,gamepad_boton_size/2);
	
	graph_boton_abajo=new_map(2*gamepad_boton_size,gamepad_boton_size,16);
	drawing_map(0,graph_boton_abajo);
	drawing_color(rgb(128,128,128));
	i=0;
	from j=0 to gamepad_boton_size/2;
		draw_line(gamepad_boton_size-i,gamepad_boton_size-j,gamepad_boton_size+i,gamepad_boton_size-j);
		i+=2;
	end
	from j=gamepad_boton_size/2 to gamepad_boton_size;
		draw_line(gamepad_boton_size-i,gamepad_boton_size-j,gamepad_boton_size+i,gamepad_boton_size-j);
		i-=1;
	end
	drawing_color(rgb(255,255,255));
	draw_line(0,gamepad_boton_size/2,gamepad_boton_size,gamepad_boton_size);
	draw_line(gamepad_boton_size,gamepad_boton_size,2*gamepad_boton_size,gamepad_boton_size/2);
	draw_line(2*gamepad_boton_size,gamepad_boton_size/2,6*gamepad_boton_size/4,0);
	draw_line(6*gamepad_boton_size/4,0,2*gamepad_boton_size/4,0);
	draw_line(2*gamepad_boton_size/4,0,0,gamepad_boton_size/2);
	
	graph_boton_izquierda=new_map(gamepad_boton_size,2*gamepad_boton_size,16);
	drawing_map(0,graph_boton_izquierda);
	drawing_color(rgb(128,128,128));
	i=0;
	from j=0 to gamepad_boton_size/2;
		draw_line(j,gamepad_boton_size-i,j,gamepad_boton_size+i);
		i+=2;
	end
	from j=gamepad_boton_size/2 to gamepad_boton_size;
		draw_line(j,gamepad_boton_size-i,j,gamepad_boton_size+i);
		i-=1;
	end
	drawing_color(rgb(255,255,255));
	draw_line(gamepad_boton_size/2,0,0,gamepad_boton_size);
	draw_line(0,gamepad_boton_size,gamepad_boton_size/2,2*gamepad_boton_size);
	draw_line(gamepad_boton_size/2,2*gamepad_boton_size,gamepad_boton_size,6*gamepad_boton_size/4);
	draw_line(gamepad_boton_size,6*gamepad_boton_size/4,gamepad_boton_size,2*gamepad_boton_size/4);
	draw_line(gamepad_boton_size,2*gamepad_boton_size/4,gamepad_boton_size/2,0);
	
	graph_boton_derecha=new_map(gamepad_boton_size,2*gamepad_boton_size,16);
	drawing_map(0,graph_boton_derecha);
	drawing_color(rgb(128,128,128));
	i=0;
	from j=0 to gamepad_boton_size/2;
		draw_line(gamepad_boton_size-j,gamepad_boton_size-i,gamepad_boton_size-j,gamepad_boton_size+i);
		i+=2;
	end
	from j=gamepad_boton_size/2 to gamepad_boton_size;
		draw_line(gamepad_boton_size-j,gamepad_boton_size-i,gamepad_boton_size-j,gamepad_boton_size+i);
		i-=1;
	end
	drawing_color(rgb(255,255,255));
	draw_line(gamepad_boton_size/2,0,gamepad_boton_size,gamepad_boton_size);
	draw_line(gamepad_boton_size,gamepad_boton_size,gamepad_boton_size/2,2*gamepad_boton_size);
	draw_line(gamepad_boton_size/2,2*gamepad_boton_size,0,6*gamepad_boton_size/4);
	draw_line(0,6*gamepad_boton_size/4,0,2*gamepad_boton_size/4);
	draw_line(0,2*gamepad_boton_size/4,gamepad_boton_size/2,0);
End

