/*	if(jugador==1) delete_text(all_text);
	write(0,0,0,0,accion);
	write(0,0,10,0,ataque);
	write_int(0,0,20,0,&x_inc);
	end
*/
	if(accion!="quieto" and ataque=="") foo=0; end
	switch(accion)
		case "quieto":
			if(foo<180) 
				graph=1; 
				foo++; 
			else 
				anim++;
				if(anim>30)
					anim=0;
				if(graph==806) graph=811; end
					if(graph!=811) if(graph<801 or graph>806) graph=801; else graph++; end end
				end
			end
			if(botones.p[jugador][0] and !botones.p[jugador][1]) flags=1; if(x_inc!=0) accion="correr"; else accion="andar"; end x_inc-=1; end
			if(botones.p[jugador][1] and !botones.p[jugador][0]) flags=0; if(x_inc!=0) accion="correr"; else accion="andar"; end x_inc+=1; end
		end
		case "andar":
			if(ataque=="")	
			   if(izquierda_suelto==0 or izquierda_suelto==margen)
				if(botones.p[jugador][0] and !botones.p[jugador][1]) //ANDAR IZQUIERDA
					x_inc-=2; 
					flags=1;
					if(x_inc>0) 
						graph=4; 
					else
						if(graph<11 or graph>14) 
							graph=11; 
							anim=-1; 
						else
							if(anim<10) 
								anim++; 
							else 
								anim=0;
								if(graph!=14) graph++; else graph=11; end
							end
						end
					end
				end
			    end
			    if(derecha_suelto==0 or derecha_suelto==margen)
				if(botones.p[jugador][1] and !botones.p[jugador][0]) //ANDAR DERECHA
					x_inc+=2; 
					flags=0;
					if(x_inc<0) 
						graph=4; 
					else
						if(graph<11 or graph>14) 
							graph=11; 
							anim=-1; 
						else
							if(anim<10) 
								anim++; 
							else 
								anim=0;
								if(graph!=14) graph++; else graph=11; end
							end
						end
					end
				end
			    end
			    if((!botones.p[jugador][0] and !botones.p[jugador][1]) or (botones.p[jugador][0] and botones.p[jugador][1])) accion="quieto"; end
			else
				if(ataque=="escudo")
					if(botones.p[jugador][0] and !botones.p[jugador][1] and x_inc==0 and botones.p[jugador][6])
						flags=1;
						x_inc=-20;
					end
					if(botones.p[jugador][1] and !botones.p[jugador][0] and x_inc==0 and botones.p[jugador][6])
						flags=0;
						x_inc=20;
					end
					if(x_inc>0) if(flags==0) angle-=20000; else angle+=20000; end end
					if(x_inc<0) if(flags==1) angle-=20000; else angle+=20000; end end
					if(x_inc==0) angle=0; end
				end
			end
		end
		case "correr":
			if(ataque=="")
				if(botones.p[jugador][0] and !botones.p[jugador][1])
					x_inc-=2; 
					flags=1;
					if(x_inc>0) 
						graph=4; 
					else
						if(graph<11 or graph>13) 
							graph=11; 
							anim=-1; 
						else
							if(anim<5) 
								anim++; 
							else 
								anim=0;
								if(graph!=13) graph++; else graph=11; end
							end
						end
					end
				end
				if(botones.p[jugador][1] and !botones.p[jugador][0])
					x_inc+=2; 
					flags=0;
					if(x_inc<0) 
						graph=4; 
					else
						if(graph<11 or graph>13) 
							graph=11; 
							anim=-1; 
						else
							if(anim<5) 
								anim++; 
							else 
								anim=0;
								if(graph!=13) graph++; else graph=11; end
							end
						end
					end
				end
				if((!botones.p[jugador][0] and !botones.p[jugador][1]) or (botones.p[jugador][0] and botones.p[jugador][1])) accion="quieto"; end
			else
				accion="quieto";
			end
		end
		case "aire":
			if(ataque=="")
				if(botones.p[jugador][0] and x_inc>-velocidad*1.5) x_inc-=2; end
				if(botones.p[jugador][1] and x_inc<velocidad*1.5) x_inc+=2; end
				if(!botones.p[jugador][2] and doblesalto==-1) doblesalto=0; end
				if(botones.p[jugador][2] and doblesalto==0) doblesalto=1; gravedad=-15; end
				if(gravedad<0) graph=3; else graph=5; end
			else
				if(ataque=="escudo") ataque=""; end
			end
		end
		case "paralizado":
			graph=2;
			tiempoescudo[jugador]=300;
			if(tiempo_paralizado<180) tiempo_paralizado++; else tiempo_paralizado=0; accion="quieto"; ataque=""; end
			if(flags==1) if(angle<90000) angle+=5000; end end
			if(flags==0) if(angle>-90000) angle-=5000; end end
		end
	end
	//-----------------------FIN MOVIMIENTOS, PRINCIPIO ATAQUES
	switch(ataque)
		case "escudo":
			//accion="escudo";
			daño=0;
			atacante=0;
			//flags=flags_antes;
			if((botones.p[jugador][6] and tiempoescudo[jugador]>0) or (x_inc!=0 and gravedad==0))
				graph=5;
				tiempoescudo[jugador]--;
			else
				if(tiempoescudo[jugador]>0)
					ataque="";
				else
					ataque="paralizado";
					accion="paralizado";
				end
			end
		end
		case "dañorecibido":
			graph=2;
			if(botones.p[jugador][0] and x_inc>-4) x_inc-=2; end
			if(botones.p[jugador][1] and x_inc<4) x_inc+=2; end
			angle+=3000;
			if(gravedad=>0) 
				if(accion!="aire") angle=0; end
				from i=2 to 7; if(botones.p[jugador][i]) ataque=""; end end
			end
		end
		case "tercersalto":
			if(foo==0) graph=31; var=-1; end
			if(foo<10) gravedad=0; x_inc=0; end
			if(foo==10)
				gravedad=0; x_inc=0;
				//var: 0 izq, 1 der, 2 up, 3 down, 4 up-izq, 5 up-der, 6 down-izq, 7 down-der		
				if(botones.p[jugador][2]) //arribases
					if(botones.p[jugador][0]) var=4; x_inc=-30; gravedad=-30;
					elseif(botones.p[jugador][1]) var=5; x_inc=30; gravedad=-30;
					else var=2; gravedad=-30; end
				elseif(botones.p[jugador][3]) //abajoses
					if(botones.p[jugador][0]) var=6; x_inc=-30; gravedad=30;
					elseif(botones.p[jugador][1]) var=7; x_inc=30; gravedad=30;
					else var=3; gravedad=30; end
				else //solo ladoses
					if(botones.p[jugador][0]) var=0; x_inc=-30; end
					if(botones.p[jugador][1]) var=1; x_inc=30; end
				end
				if(var==-1) var=2; gravedad=-30; end
			end
			if(foo>15 and foo<20) gravedad=0; x_inc=0; end
			if(foo==20)
				gravedad=0; x_inc=0;
				if(botones.p[jugador][2]) //arribases
					if(botones.p[jugador][0]) if(var!=4) x_inc=-30; gravedad=-30; end
					elseif(botones.p[jugador][1]) if(var!=5) x_inc=30; gravedad=-30; end
					elseif(var!=2) var=2; gravedad=-30; end
				elseif(botones.p[jugador][3]) //abajoses
					if(botones.p[jugador][0]) if(var!=6) x_inc=-30; gravedad=30; end
					elseif(botones.p[jugador][1]) if(var!=7) x_inc=30; gravedad=30; end
					elseif(var!=3) gravedad=30; end
				else //solo ladoses
					if(botones.p[jugador][0] and var!=0) x_inc=-30; end
					if(botones.p[jugador][1] and var!=1) x_inc=30; end
				end
			end
			if(foo>25)
				ataque="cayendo"; gravedad=0; x_inc=0;
			end
			foo++;
		end
		case "cayendo":
			if(botones.p[jugador][0]) x_inc=-6; end
			if(botones.p[jugador][1]) x_inc=6; end
			if(accion=="aire")
				graph=2;
				if(flags==1) 
					if(angle<180000) angle+=3000; end
				else
					if(angle>-180000) angle-=3000; end
				end
			else
				accion="quieto";
				ataque="";
			end
		end
		case "rayovertical":
			if(foo<40) foo++; else ataque=""; end
//			if(foo<20) graph=31; else  end
			graph=31;
			if(id_col=collision(type pikachu_rayovertical))
				if(fget_dist(x,0,id_col.x,0)<ancho)
					pikachu_reciberayo();
					ataque="";
					graph=32;
					frame(2000);
				end
			end
		end
		case "disparado":
			graph=31;
			gravedad=1;
			x_inc=0;
			if(botones.p[jugador][5] and foo<90) 
				foo++; 
			else 
				if(foo<50) foo=50; end
				gravedad=-foo/9;
				if(flags==0) x_inc=foo/3; else x_inc=-foo/3; end 
				ataque="siendodisparado"; 
				foo=0; 
			end
		end
		case "siendodisparado":
			if(foo<5)
				foo++;
			else
				foo=0;
				if(graph<51 or graph>53) graph=51; else graph++; end
			end
			if(id_col=collision(type personaje))
				if(id_col.ataque!="dañorecibido")
					id_col.daño+=abs(x_inc)/2;
					id_col.atacante=jugador;
					id_col.direccion_golpe=flags;
					x_inc=0;
					ataque="";
				end
			end

			if((flags==0 and x_inc<10) or (flags==1 and x_inc>-10)) ataque=""; graph=5; end
		end
		case "voltereta":
			if(accion!="aire") ataque=""; end
			if(id_col=collision(type personaje))
				id_col.daño+=abs(x_inc)/2;
				id_col.atacante=jugador;
				id_col.direccion_golpe=flags;
				x_inc=0;
			end
			graph=61;
			if(angle>-360000) angle-=30000; else ataque=""; angle=0; end
		end
	end
	//--------------------FIN ATAQUES
	//--------------------PRINCIPIO CONTROLES
		if(ataque=="") //HAY QUE COMPROBAR SIEMPRE EL ATAQUE PORQUE SINO SE PUEDEN PRODUCIR VARIAS. P. EJ: 3ERSALTO Y KUNAI
			if(accion!="aire")
				//BOTON ATAQUE 1: ESTÁ TODOO MAL, ESTOS SE PUEDEN PRODUCIR SIN TENER QUE DARLE AL LADO EN EL MISMISIMO MOMENTO.
		/*ESCUDO*/	if(ataque=="" and botones.p[jugador][6] and ataque=="") ataque="escudo"; flags_antes=flags; escudo(); end	
	
		/*RAYO VERTICAL*/ if(ataque=="" and botones.p[jugador][5] and botones.p[jugador][3] and ataque2_suelto>0 and ataque2_suelto<margen) ataque="rayovertical"; pikachu_rayovertical(); foo=0; end

		/*SALIR DISPARADO*/	if(ataque=="" and botones.p[jugador][5] and botones.p[jugador][0] and ataque2_suelto>0 and ataque2_suelto<margen and izquierda_suelto>0 and izquierda_suelto<margen) flags=1; ataque="disparado"; foo=0; end
		if(ataque=="" and botones.p[jugador][5] and botones.p[jugador][1] and ataque2_suelto>0 and ataque2_suelto<margen and derecha_suelto>0 and derecha_suelto<margen) flags=0; ataque="disparado"; foo=0; end

		
		/*3ERSALTO*/	if(ataque=="" and botones.p[jugador][5] and botones.p[jugador][2] and ataque2_suelto>0 and ataque2_suelto<margen) ataque="tercersalto"; foo=0; end

			//BOTON ATAQUE 2

			else
				//BOTON ATAQUE 1: ESTÁ TODOO MAL, ESTOS SE PUEDEN PRODUCIR SIN TENER QUE DARLE AL LADO EN EL MISMISIMO MOMENTO.
		/*RAYO VERTICAL*/ if(ataque=="" and botones.p[jugador][5] and botones.p[jugador][3] and ataque2_suelto>0 and ataque2_suelto<margen) ataque="rayovertical"; pikachu_rayovertical(); foo=0; end				

		/*SALIR DISPARADO*/	if(ataque=="" and botones.p[jugador][5] and botones.p[jugador][0] and ataque2_suelto>0 and ataque2_suelto<margen and izquierda_suelto>0 and izquierda_suelto<margen) flags=1; ataque="disparado"; foo=0; end
		if(ataque=="" and botones.p[jugador][5] and botones.p[jugador][1] and ataque2_suelto>0 and ataque2_suelto<margen and derecha_suelto>0 and derecha_suelto<margen) flags=0; ataque="disparado"; foo=0; end
		
		/*ESCUDO*/	//if(ataque=="" and botones.p[jugador][6] and escudo_suelto>4) ataque="escudoaire"; end
	
		/*3ERSALTO*/	if(ataque=="" and botones.p[jugador][5] and botones.p[jugador][2] and ataque2_suelto>0 and ataque2_suelto<margen) ataque="tercersalto"; end
	
			//BOTON ATAQUE 2
		/*VOLTERETA*/	if(ataque=="" and botones.p[jugador][4] and ataque=="" and ataque1_suelto>0) ataque="voltereta"; end	
			end
		end

		//---------MOVIMIENTO Y MISC.
		
		//COLISION CON OTROS PERSONAJES
		if((accion=="andar" or accion=="quieto") and (id_col=collision(type personaje)) and ataque!="escudo")
			if((id_col.accion=="andar" or id_col.accion=="quieto") and fget_dist(x,y,id_col.x,id_col.y)<ancho)
				if(id_col.x>x) x_inc-=2; end
				if(id_col.x<x) x_inc+=2; end
			end
		end
		
		//FRICCIONES:
		//a la altura del suelo
		//if((map_get_pixel(0,durezas_nivel,x,y+alto)==dureza_suelo or map_get_pixel(0,durezas_nivel,x,y+alto)==dureza_plataforma) and gravedad==0)
		if(accion!="aire" and gravedad==0)
			if(x_inc<0) x_inc++; end
			if(x_inc>0) x_inc--; end
			if(accion=="quieto" or accion=="andar")
				if(botones.p[jugador][2] and ataque=="") gravedad=-15; accion="aire"; doblesalto=-1; end
			end
			if(accion=="correr")
				if(botones.p[jugador][2] and ataque=="") gravedad=-15; accion="aire"; doblesalto=-1; end //cuestionable
			end
		end
		//por debajo del suelo (cayendo?)
		if(accion!="correr" and accion!="aire" and ataque=="")
			if(x_inc>velocidad) x_inc=velocidad; end
			if(x_inc<-velocidad) x_inc=-velocidad; end
		else
			if(ataque=="" and accion!="aire")
				if(x_inc>velocidad*1.5) x_inc=velocidad*1.5; end
				if(x_inc<-velocidad*1.5) x_inc=-velocidad*1.5; end
			end
		end
		//en el aire!
		if(map_get_pixel(0,durezas_nivel,x,y+alto)!=dureza_suelo and map_get_pixel(0,durezas_nivel,x,y+alto)!=dureza_plataforma)
			gravedad++; 
		end
		
		if(ataque=="" or ataque=="cayendo" or ataque=="dañorecibido")
			angle=0;
			if(gravedad>10) gravedad=10; end
		else
			if(gravedad>3) gravedad--; end
		end
		//--------------------------------------------		

		x_destino=x+x_inc;	

		if(x_destino==x)
			from i=y to y+alto-1;
				//PARA LAS PENDIENTES: comprobamos el suelo y si ese suelo tiene aún más suelo encima y debajo xD
				if(map_get_pixel(0,durezas_nivel,x,i)==dureza_suelo and map_get_pixel(0,durezas_nivel,x,i-1)!=dureza_suelo) if(accion=="aire") accion="quieto"; end y=i-alto; gravedad=0; break; end
			end
		end
		if(x_destino>x)
			from x=x to x_destino-1;
				from i=y-alto to y-1;
					//PARA LAS PAREDES: COMPROBAMOS QUE SÓLO PUEDAN SER PAREDES
					if(map_get_pixel(0,durezas_nivel,x+ancho,i)==dureza_suelo 
					and map_get_pixel(0,durezas_nivel,x+ancho+1,i)!=dureza_suelo 
					and map_get_pixel(0,durezas_nivel,x+ancho-1,i)!=dureza_suelo) 
						if(accion=="andar" or accion=="correr") accion="quieto"; end 
						x_inc=3000; break; 
					end
				end
				//DOBLE COMPROBACIÓN DE PAREDES, PARA HACER EL SEGUNDO BREAK BIEN. POR ABREVIAR UTILIZO ESA VARIABLE XD
				if(x_inc==3000) x_inc=0; break; end

				from i=y to y+alto-1;
					//PARA LAS PENDIENTES: comprobamos el suelo y si ese suelo tiene aún más suelo encima xD
					if(map_get_pixel(0,durezas_nivel,x,i)==dureza_suelo and map_get_pixel(0,durezas_nivel,x,i-1)!=dureza_suelo) if(accion=="aire") accion="quieto"; end y=i-alto; gravedad=0; break; end
				end
				//PARA QUE CUANDO LLEGUE AL BORDE, NO SE TIRE. COMPROBAMOS QUE NO SEA UNA PARED, NI UNA PENDIENTE
				if(map_get_pixel(0,durezas_nivel,x+ancho,y+alto)==dureza_suelo 
				and map_get_pixel(0,durezas_nivel,x+ancho+1,y+alto)!=dureza_suelo 
				and map_get_pixel(0,durezas_nivel,x+ancho-1,y+alto)==dureza_suelo 
				and map_get_pixel(0,durezas_nivel,x+ancho+1,y+alto+1)!=dureza_suelo 
				and map_get_pixel(0,durezas_nivel,x+ancho+1,y+alto-1)!=dureza_suelo 
				and (accion=="andar" or accion=="quieto" or ataque=="escudo")) 
					x_inc=0; angle=0; break; 
				end
			end
		end
		if(x_destino<x)
			from x=x to x_destino+1 step -1;
				from i=y-alto to y-1;
					//PARA LAS PAREDES: COMPROBAMOS QUE SÓLO PUEDAN SER PAREDES
					if(map_get_pixel(0,durezas_nivel,x-ancho,i)==dureza_suelo 
					and map_get_pixel(0,durezas_nivel,x-ancho+1,i)!=dureza_suelo 
					and map_get_pixel(0,durezas_nivel,x-ancho-1,i)!=dureza_suelo) 
						if(accion=="andar" or accion=="correr") accion="quieto"; end 
						x_inc=3000; break; 
					end
				end
				//DOBLE COMPROBACIÓN DE PAREDES, PARA HACER EL SEGUNDO BREAK BIEN. POR ABREVIAR UTILIZO ESA VARIABLE XD
				if(x_inc==3000) x_inc=0; break; end

				from i=y to y+alto-1;
					//PARA LAS PENDIENTES: comprobamos el suelo y si ese suelo tiene aún más suelo encima xD
					if(map_get_pixel(0,durezas_nivel,x,i)==dureza_suelo and map_get_pixel(0,durezas_nivel,x,i-1)!=dureza_suelo) if(accion=="aire") accion="quieto"; end y=i-alto; gravedad=0; break; end
				end
				//PARA QUE CUANDO LLEGUE AL BORDE, NO SE TIRE. COMPROBAMOS QUE NO SEA UNA PARED, NI UNA PENDIENTE
				if(map_get_pixel(0,durezas_nivel,x-ancho,y+alto)==dureza_suelo 
				and map_get_pixel(0,durezas_nivel,x-ancho-1,y+alto)!=dureza_suelo 
				and map_get_pixel(0,durezas_nivel,x-ancho+1,y+alto)==dureza_suelo 
				and map_get_pixel(0,durezas_nivel,x-ancho-1,y+alto+1)!=dureza_suelo 
				and map_get_pixel(0,durezas_nivel,x-ancho-1,y+alto-1)!=dureza_suelo 
				and (accion=="andar" or accion=="quieto" or ataque=="escudo")) 
					x_inc=0; angle=0; break; 
				end
			end
		end

		y_destino=y+gravedad;

//		if(gravedad==0 and map_get_pixel(0,durezas_nivel,x,y+alto)==dureza_suelo and accion=="aire") if(x_inc==0) accion="quieto"; else accion="andar"; end end
		if(gravedad==0 and botones.p[jugador][3] and ataque=="" and map_get_pixel(0,durezas_nivel,x,y+alto)==dureza_plataforma) gravedad++; end
		if(gravedad>0) 
			if(gravedad>5 or ataque!="")
				if(x_inc<0) x_inc++; end
				if(x_inc>0) x_inc--; end
			end

			from y=y-1 to y_destino-1;
				if(map_get_pixel(0,durezas_nivel,x,y+alto)==dureza_suelo or (map_get_pixel(0,durezas_nivel,x,y+alto)==dureza_plataforma and !botones.p[jugador][3]))
					accion="quieto";
					gravedad=0; 
					angle=0;
					break;
				end
			end
		end
		if(gravedad<0) 
			from y=y to y_destino+1 step -1;
				if(map_get_pixel(0,durezas_nivel,x,y-alto)==dureza_suelo)
					//accion="quieto";
					gravedad=0; 
					angle=0;
					break;
				end
			end
		end
		if(gravedad!=0) accion="aire"; end
//------------------------
		if(x<limites[3] or x>limites[1] or y>limites[2] or y<limites[0]) x=512; y=100; x_inc=0; gravedad=0; ataque=""; accion="quieto"; daño=0; p[jugador].porcentual=0; p[jugador].vidas--; end
		
		if(daño>0) 
			if(direccion_golpe==0) 
				x_inc=(daño/3)*1+(p[jugador].porcentual/10);
			else
				x_inc=-((daño/3)*1+(p[jugador].porcentual/10));
			end
			gravedad=-(daño+(p[jugador].porcentual/60));
			if(gravedad<-15) gravedad=-15; end
			if(x_inc>15) ataque="dañorecibido"; else ataque=""; end
			p[jugador].porcentual+=daño; 
			daño=0; 
			atacante=0; 
		end